{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","message","$arena","snake","segments","initSnake","self","canvasCenter","x","width","y","height","head","img","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;QAOaA,cAAAA;AAET,uBAAc;AAAA;;AACV,iBAAKC,OAAL,GAAe,kBAAf;AACA,iBAAKC,MAAL,GAAc,sBAAE,QAAF,CAAd;AACA,iBAAKC,KAAL,GAAa;AACTC,0BAAU;AADD,aAAb;AAGA,iBAAKC,SAAL;AACH;;sBAEDA,iCAAY;AACR,gBAAIC,OAAO,IAAX;AACA,gBAAIC,eAAe;AACfC,mBAAGF,KAAKJ,MAAL,CAAYO,KAAZ,EADY;AAEfC,mBAAGJ,KAAKJ,MAAL,CAAYS,MAAZ;AAFY,aAAnB;AAIA,gBAAIC,OAAO;AACPC,qBAAK,kBADE;AAEPL,mBAAGD,aAAaC,CAFT;AAGPE,mBAAGH,aAAaG;AAHT,aAAX;AAKH;;;;;;;;;;;oBC7BU;AACbI,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,sBAAYL,KADhB;AAEbM,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBed,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nimport $ from 'jquery';\n\nexport class App {\n\n    constructor() {\n        this.message = 'Snake by ashWare';\n        this.$arena = $('.arena');\n        this.snake = {\n            segments: []\n        }\n        this.initSnake();\n    }\n\n    initSnake() {\n        let self = this;\n        let canvasCenter = {\n            x: self.$arena.width(),\n            y: self.$arena.height()\n        };\n        let head = {\n            img: '/images/head.png',\n            x: canvasCenter.x,\n            y: canvasCenter.y\n        }\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}