{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","message","spriteSize","stepTimerHandle","snake","direction","directions","images","segments","stepInterval","crawl","setInterval","drawSnake","fadeArena","i","length","segment","advanceSegment","followSegment","drawSegment","position","j","preceder","dx","absDx","Math","abs","stepX","round","imgObj","ctx","save","translate","drawImage","imgIndex","restore","fillStyle","fillRect","canvas","width","height","initSnake","canvasCenter","x","parseInt","$arena","y","$img","push","setDomVars","document","getElementById","getContext","clientWidth","clientHeight","attached","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nimport $ from 'jquery';\n\nexport class App {\n\n    constructor() {\n        this.message = 'Snake by ashWare';\n        this.spriteSize = 16;\n        this.stepTimerHandle = null;\n        this.snake = {\n            direction: 0,\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1]\n            ],\n            images: [],\n            segments: [],\n            stepInterval: 10\n        }\n    }\n\n    crawl() {\n        this.stepTimerHandle = setInterval(() => {\n            this.drawSnake();\n        }, this.snake.stepInterval);\n    }\n\n    drawSnake() {\n        this.fadeArena();\n        for (let i = 0; i < this.snake.segments.length; i++) {\n            let segment = this.snake.segments[i];\n            (i == 0) ? this.advanceSegment(i) : this.followSegment(i, i - 1);\n            this.drawSegment(segment);\n        }\n    }\n\n    advanceSegment(i) {\n        this.snake.segments[i].position[0] += this.snake.directions[this.snake.direction][0];\n        this.snake.segments[i].position[1] += this.snake.directions[this.snake.direction][1];\n    }\n\n    followSegment(i, j) {\n        let segment = this.snake.segments[i];\n        let preceder = this.snake.segments[j];\n        let dx = preceder.position[0] - segment.position[0];\n        if (dx !== 0) {\n            let absDx = Math.abs(dx)\n            let stepX = Math.round(absDx / dx);\n            (absDx > this.spriteSize) ? segment.position[0] += stepX : null;\n        }\n    }\n\n    drawSegment(imgObj) {\n        let ctx = this.ctx;\n        ctx.save();\n        ctx.translate(imgObj.position[0], imgObj.position[1]);\n        ctx.drawImage(this.snake.images[imgObj.imgIndex], this.spriteSize, this.spriteSize);\n        ctx.restore();\n    }\n\n    fadeArena() {\n        let ctx = this.ctx;\n        ctx.fillStyle = 'rgba(0,0,0,.1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    initSnake() {\n        let canvasCenter = {\n            x: parseInt(this.$arena.width() / 2, 10),\n            y: parseInt(this.$arena.height() / 2, 10)\n        };\n        for (let i = 0; i < this.snake.images.length; i++) {\n            let $img = this.snake.images[i];\n            let segment = {\n                imgIndex: i,\n                position: [canvasCenter.x, canvasCenter.y]\n            }\n            this.snake.segments.push(segment);\n        }\n    }\n\n    setDomVars() {\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.snake.images = [\n            $('.head')[0],\n            $('.body')[0],\n            $('.tail')[0]\n        ]\n    }\n\n    attached() {\n        this.setDomVars();\n        this.initSnake();\n        $(() => {\n            this.crawl();\n        });\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}