{"version":3,"sources":["app.js","environment.js","main.js","components/game-screen.js","components/restart-overlay.js","components/status.js","services/keystroke-service.js","services/screen-service.js","services/snack-service.js","services/snake-service.js","services/timing-service.js","resources/index.js"],"names":["App","keystrokeService","timingService","eventAggregator","ea","message","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","GameScreenCustomElement","screenService","snakeService","snakeImages","snackImages","snakeParts","snacks","attached","self","$arena","$","canvas","document","getElementById","each","push","setDomVars","setCenter","RestartOverlayCustomElement","showOverlay","firstGame","pause","publish","addEventListeners","subscribe","StatusCustomElement","speed","length","score","snack","response","setTimeout","KeystrokeService","acceptMoves","myKeypressCallback","keypressInput","bind","setSubscribers","keysOff","keysOn","addEventListener","e","keycode","event","key","ScreenService","spriteSize","halfSprite","snackSize","halfSnackSize","canvasCenter","drawSegment","segment","ctx","save","translate","position","type","rotate","direction","Math","PI","drawImage","restore","drawSnack","index","drawSnacks","onBoard","forEach","gameScreen","fadeArena","fillStyle","fillRect","width","height","getContext","clientWidth","clientHeight","wallSize","parseInt","css","x","y","limits","right","bottom","left","top","SnackService","images","methods","newSnack","name","i","addSnack","floor","random","className","initStuff","SnakeService","snake","segments","directions","steps","turnSteps","deadSegments","speedFactor","allDown","step","advanceSegment","followSegment","hitSnack","hitSnake","hitWall","die","fallNdraw","hitFloor","gameOver","head","wallHit","overlap","segPos","headPos","dx","abs","dy","xOverlap","yOverlap","snackPos","splice","cutSnake","halfSnake","growHarder","growInterval","restartIntervals","growSlower","score100","scoreUpdate","score10","scoreX10","scoreInterval","trashSnacks","speedup","stepInterval","slowdown","console","log","grow","tail","dir","factor","lastSegment","crawling","clearTimedEvents","fall","amount","accellerate","accelleration","j","preceder","axis","startsWith","center","initSnake","TimingService","stepTimerHandle","scoreTimerHandle","fallTimerHandle","growTimerHandle","speedupTimerHandle","snackTimerHandle","speedupInterval","snackInterval","startGame","setInterval","clearInterval","pauseGame","crawl","restart"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './services/keystroke-service';\nimport { TimingService } from './services/timing-service';\n\n@inject(KeystrokeService, TimingService, EventAggregator)\n\nexport class App {\n\n    constructor(keystrokeService, timingService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.timingService = timingService;\n        this.ea = eventAggregator;\n        this.message = 'Snake by ashWare';\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport { ScreenService } from '../services/screen-service'\nimport { SnakeService } from '../services/snake-service'\n\n@inject(EventAggregator, ScreenService, SnakeService)\n\nexport class GameScreenCustomElement {\n\n    constructor(eventAggregator, screenService, snakeService) {\n        this.ea = eventAggregator;\n        this.screenService = screenService;\n        this.snakeService = snakeService;\n        this.snakeImages = [];\n        this.snackImages = [];\n        // images with these names.jpg should exist in /images/..\n        this.snakeParts = [\n            'head',\n            'body',\n            'tail'\n        ];\n        this.snacks = [\n            'axe',\n            'beer',\n            'bunny',\n            'diamond',\n            'gold',\n            'ruby',\n            'skull',\n            'snail',\n            'trash',\n            'viagra'\n        ]\n    }\n\n    attached() {\n        let self = this;\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        $('.snakeImages img').each(function () {\n            self.snakeImages.push(this);\n        });\n        $('.snackImages img').each(function () {\n            self.snackImages.push(this);\n        });\n        $(() => {\n            this.screenService.setDomVars(this.$arena, this.canvas, this.snakeImages, this.snackImages)\n            this.snakeService.setCenter();\n        });\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class RestartOverlayCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.showOverlay = true;\n        this.firstGame = true;\n        this.pause = false;\n    }\n\n    start() {\n        this.ea.publish('start');\n        this.showOverlay = false;\n        this.firstGame = false;\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('gameOver', response => {\n            this.showOverlay = true;\n        });\n        this.ea.subscribe('start', response => {\n            this.showOverlay = false;\n        });\n        this.ea.subscribe('pause', response => {\n            this.pause = !this.pause;\n        });\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class StatusCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.speed = 0;\n        this.length = 2;\n        this.score = 0;\n        this.snack = '';\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('speedChange', response => {\n            this.speed += response;\n        });\n        this.ea.subscribe('grow', response => {\n            this.length = response;\n        });\n        this.ea.subscribe('restart', response => {\n            this.length = 1;\n            this.speed = 0;\n        });\n        this.ea.subscribe('score', response => {\n            this.score = response;\n        });\n        this.ea.subscribe('snack', response => {\n            this.snack = response;\n            setTimeout(() => {\n                this.snack = '';\n            }, 15000);\n        });\n\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        (this.acceptMoves) && this.ea.publish('keyPressed', keycode);\n    }\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class ScreenService {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.spriteSize = 16;\n        this.halfSprite = this.spriteSize / 2;\n        this.snackSize = 24;\n        this.halfSnackSize = this.snackSize / 2;\n        this.canvasCenter = {};\n    }\n\n    drawSegment(segment) {\n        let ctx = this.ctx;\n        ctx.save();\n        ctx.translate(segment.position[0], segment.position[1]);\n        (segment.type !== 1) && ctx.rotate(segment.direction * Math.PI / 2);\n        ctx.drawImage(this.snakeImages[segment.type], -this.halfSprite, -this.halfSprite);\n        ctx.restore();\n    }\n\n    drawSnack(snack) {\n        let ctx = this.ctx;\n        ctx.save();\n        // ctx.strokeStyle = 'goldenrod';\n        // ctx.rect(snack.position[0], snack.position[1], this.snackSize, this.snackSize);\n        // ctx.stroke();\n        ctx.translate(snack.position[0], snack.position[1]);\n        // snacks are 2x larger\n        ctx.drawImage(this.snackImages[snack.index], 0, 0, this.snackSize, this.snackSize);\n        ctx.restore();\n    }\n\n    drawSnacks() {\n        this.snacks.onBoard.forEach((snack) => {\n            gameScreen.drawSnack(snack);\n        })\n    }\n\n    fadeArena() {\n        let ctx = this.ctx;\n        ctx.fillStyle = 'rgba(0,0,0,.1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    setDomVars($arena, canvas, snakeImages, snackImages) {\n        this.ctx = canvas.getContext('2d');\n        this.canvas = canvas;\n        this.canvas.width = canvas.clientWidth;\n        this.canvas.height = canvas.clientHeight;\n        this.wallSize = parseInt($arena.css('borderWidth'), 10);\n        this.canvasCenter = {\n            x: parseInt($arena.width() / 2, 10),\n            y: parseInt($arena.height() / 2, 10)\n        };\n        this.limits = {\n            right: canvas.width - this.wallSize,\n            bottom: canvas.height - this.wallSize,\n            left: this.wallSize,\n            top: this.wallSize\n        };\n        this.snakeImages = snakeImages;\n        this.snackImages = snackImages;\n    }\n\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class SnackService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.snacks = {\n            images: [],\n            onBoard: [],\n            methods: {\n                'axe': 'cutSnake',\n                'beer': 'growSlower',\n                'bunny': 'speedup',\n                'diamond': 'score100',\n                'gold': 'score10',\n                'ruby': 'scoreX10',\n                'skull': 'die',\n                'snail': 'slowdown',\n                'trash': 'trashSnacks',\n                'viagra': 'growHarder'\n            }\n        }\n\n        this.setSubscribers();\n    }\n\n    newSnack(x, y, name, i) {\n        let snack = {\n            position: [x, y],\n            name: name,\n            index: i\n        }\n        return snack;\n    }\n\n    addSnack() {\n        let snack = Math.floor(Math.random() * this.snacks.images.length);\n        let name = this.snacks.images[snack].className;\n        // compensate for border width (24);\n        let x = Math.floor(Math.random() * this.canvas.width - 24) + 24;\n        let y = Math.floor(Math.random() * this.canvas.height - 24) + 24;\n        this.snacks.onBoard.push(this.newSnack(x, y, name, snack));\n    }\n\n    initStuff() {\n        this.snacks.onBoard = [];\n    }\n\n\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { ScreenService } from './screen-service'\n\n@inject(EventAggregator, ScreenService)\n\nexport class SnakeService {\n    constructor(eventAggregator, screenService) {\n        this.ea = eventAggregator;\n        this.screenService = screenService;\n        this.snake = {\n            segments: [],\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1],\n                [0, 0]\n            ],\n            steps: 0,\n            turnSteps: 0,\n            deadSegments: 0\n        }\n        this.setSubscribers();\n    }\n\n    segment(direction, speedFactor, x, y) {\n        return {\n            direction: direction,\n            position: [x, y],\n            speedFactor: speedFactor,\n            type: 2 // 'tail'\n        }\n    }\n\n    allDown() {\n        this.snake.segments.forEach((segment) => {\n            segment.direction = 1;\n            segment.speedFactor = 1;\n        });\n    }\n\n    step() {\n        this.snake.steps += 1;\n        // limit the rate at which turns are accepted\n        (this.snake.turnSteps > 0) && this.snake.turnSteps--;\n        this.snake.segments.forEach((segment, i) => {\n            (i == 0) ? this.advanceSegment(i) : this.followSegment(i, i - 1);\n        });\n        let snack = this.hitSnack();\n        // call the function named with value of snack\n        (snack !== '') && this[snack]();\n        (this.hitSnake() || this.hitWall()) && this.die();\n    }\n\n    fallNdraw() {\n        this.snake.segments.forEach((segment, i) => {\n            (segment.direction < 4) && this.advanceSegment(i, true);\n            if (segment.direction < 4 && this.hitFloor(segment)) {\n                this.snake.deadSegments++;\n                segment.direction = 4;\n            }\n        });\n\n        // Where does this go?\n        if (this.snake.deadSegments >= this.snake.segments.length) {\n            // this.clearTimedEvents();\n            // this.keysOn();\n            this.gameOver();\n        }\n    }\n\n    hitFloor(segment) {\n        return segment.position[1] + this.halfSprite > this.canvas.height;\n    }\n\n    hitWall() {\n        let head = this.snake.segments[0];\n        let wallHit = head.position[0] > this.canvas.width - this.halfSprite ||\n            head.position[0] < 0 + this.halfSprite ||\n            head.position[1] > this.canvas.height - this.halfSprite ||\n            head.position[1] < 0 + this.halfSprite;\n        if (wallHit) {\n            this.ea.publish('snack', 'You hit a wall');\n            return wallHit;\n        }\n    }\n\n    hitSnake() {\n        let self = this;\n        let head = this.snake.segments[0];\n        function overlap(segPos, headPos) {\n            let dx = Math.abs(segPos[0] - headPos[0]);\n            let dy = Math.abs(segPos[1] - headPos[1]);\n            let xOverlap = dx < self.halfSprite;\n            let yOverlap = dy < self.halfSprite;\n            return xOverlap && yOverlap;\n        }\n        for (let i = 1; i < this.snake.segments.length - 1; i++) {\n            let segment = this.snake.segments[i];\n            if (overlap(segment.position, head.position)) {\n                this.ea.publish('snack', 'You tried to eat yourself that&rsquo;s deadly');\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hitSnack() {\n        let self = this;\n        let head = this.snake.segments[0];\n        function overlap(snackPos, headPos) {\n            let dx = Math.abs(snackPos[0] - headPos[0]);\n            let dy = Math.abs(snackPos[1] - headPos[1]);\n            let xOverlap = dx < (self.snackSize + self.spriteSize) / 2;\n            let yOverlap = dy < (self.snackSize + self.spriteSize) / 2;\n            return xOverlap && yOverlap;\n        }\n        for (let i = 0; i < this.snacks.onBoard.length - 1; i++) {\n            let snack = this.snacks.onBoard[i];\n            if (overlap(snack.position, head.position)) {\n                (i > -1) && this.snacks.onBoard.splice(i, 1);\n                return this.snacks.methods[snack.name];\n            }\n        }\n        return '';\n    }\n\n    cutSnake() {\n        let halfSnake = Math.floor(this.snake.segments.length / 2)\n        this.snake.segments.splice(-halfSnake);\n        this.ea.publish('snack', 'Axe: you lost half of your length');\n    }\n\n    growHarder() {\n        if (this.growInterval > 500) {\n            this.growInterval -= 500;\n            this.restartIntervals();\n            setTimeout(() => {\n                this.growInterval += 500;\n                this.restartIntervals();\n            }, 15000);\n            this.ea.publish('snack', 'Blue pill: growing harder for 15 seconds');\n        }\n    }\n    growSlower() {\n        this.growInterval += 500;\n        this.restartIntervals();\n        setTimeout(() => {\n            this.growInterval -= 500;\n            this.restartIntervals();\n        }, 15000);\n        this.ea.publish('snack', 'Beer: growing slower for 15 seconds');\n    }\n    score100() {\n        this.scoreUpdate(1000);\n        this.ea.publish('snack', 'Diamond: you scored 1000 points');\n    }\n    score10() {\n        this.scoreUpdate(100);\n        this.ea.publish('snack', 'Gold: you scored 100 points');\n    }\n    scoreX10() {\n        if (this.scoreInterval > 250) {\n            this.scoreInterval -= 250;\n            setTimeout(() => {\n                this.scoreInterval += 250;\n            }, 15000);\n            this.ea.publish('snack', 'Ruby: scoring faster for 15 seconds');\n        }\n    }\n    trashSnacks() {\n        this.snacks.onBoard = [];\n        this.ea.publish('snack', 'Trash: you trashed all extra&rsquo;s');\n    }\n\n    speedup() {\n        if (this.stepInterval > 0) {\n            this.stepInterval -= 1;\n            this.restartIntervals();\n            this.ea.publish('speedChange', 1);\n        } else {\n            this.snake.segments.forEach((segment) => {\n                segment.speedFactor += 1;\n            });\n            this.stepInterval = 7;\n            this.ea.publish('speedChange', 7);\n        }\n        this.ea.publish('snack', 'Rabbit: running faster');\n    }\n\n    slowdown() {\n        console.log('slowdown');\n        if (this.snake.segments[0].speedFactor > 1) {\n            this.snake.segments.forEach((segment) => {\n                segment.speedFactor -= 1;\n            });\n            this.ea.publish('speedChange', -7);\n        } else {\n            if (this.stepInterval < 7) {\n                this.stepInterval += 1;\n                this.restartIntervals();\n                this.ea.publish('speedChange', -1);\n            }\n        }\n        this.ea.publish('snack', 'Snail: running slower');\n    }\n\n    grow() {\n        let tail = this.snake.segments[this.snake.segments.length - 1];\n        let dir = tail.direction;\n        let factor = tail.speedFactor;\n        let x = tail.position[0] - this.snake.directions[dir][0] * this.spriteSize;\n        let y = tail.position[1] - this.snake.directions[dir][1] * this.spriteSize;\n        this.snake.segments.push(this.segment(dir, factor, x, y));\n        let lastSegment = this.snake.segments.length - 1;\n        this.snake.segments[lastSegment].index = lastSegment;\n        this.snake.segments[lastSegment - 1].type = 1; // body\n        this.ea.publish('grow', this.snake.segments.length);\n    }\n\n    die() {\n        this.keysOff();\n        this.crawling = false;\n        this.clearTimedEvents()\n        this.fall();\n    }\n\n    scoreUpdate(amount) {\n        if (amount) {\n            this.score += amount;\n        } else {\n            this.score += this.snake.segments.length;\n        }\n        this.ea.publish('score', this.score);\n    }\n\n    gameOver() {\n        this.ea.publish('gameOver');\n    }\n\n    advanceSegment(i, accellerate) {\n        let segment = this.snake.segments[i];\n        // when falling accellerate = true\n        (accellerate) && (segment.speedFactor *= this.accelleration);\n        segment.position[0] += parseInt(this.snake.directions[segment.direction][0] * segment.speedFactor, 10);\n        segment.position[1] += parseInt(this.snake.directions[segment.direction][1] * segment.speedFactor, 10);\n    }\n\n    followSegment(i, j) {\n        let segment = this.snake.segments[i];\n        let preceder = this.snake.segments[j];\n        let dx = Math.abs(preceder.position[0] - segment.position[0]);\n        let dy = Math.abs(preceder.position[1] - segment.position[1]);\n        let axis = (segment.direction % 2 == 0) ? 'x' : 'y';\n        if (preceder.direction !== segment.direction) {\n            if (axis == 'x') {\n                if (dx < this.spriteSize && dy > this.spriteSize) {\n                    segment.direction = preceder.direction;\n                    segment.position[0] = preceder.position[0];\n                }\n            } else {\n                if (dy < this.spriteSize && dx > this.spriteSize) {\n                    segment.direction = preceder.direction;\n                    segment.position[1] = preceder.position[1];\n                }\n            }\n        }\n        this.advanceSegment(i);\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            if (response.startsWith('Arrow') && this.snake.turnSteps == 0) {\n                this.snake.turnSteps = 17;\n                switch (response) {\n                    case 'ArrowRight': direction = 0;\n                        break;\n                    case 'ArrowDown': direction = 1;\n                        break;\n                    case 'ArrowLeft': direction = 2;\n                        break;\n                    case 'ArrowUp': direction = 3;\n                        break;\n                }\n                // prevent going in opposite direction\n                (((direction + 2) % 4) !== this.snake.segments[0].direction) && (this.snake.segments[0].direction = direction);\n            }\n        });\n    }\n\n    setCenter() {\n        this.center = this.screenService.canvasCenter;\n    }\n\n    initSnake() {\n        this.accelleration = 1.01;\n        this.score = 0;\n\n        this.snake.segments = [];\n        this.snake.deadSegments = 0;\n        this.snake.steps = 0;\n        this.snake.turnSteps = 0;\n        this.snake.segments.push(this.segment(0, 1, this.center.x, this.center.y));\n        let lastSegment = this.snake.segments.length - 1;\n        this.snake.segments[lastSegment].index = lastSegment;\n        this.snake.segments[lastSegment].type = 0; // head\n        this.score = 0;\n    }\n\n\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { SnakeService } from './snake-service';\n\n@inject(EventAggregator, SnakeService)\n\nexport class TimingService {\n    constructor(eventAggregator, snakeService) {\n        this.ea = eventAggregator;\n        this.pause = false;\n        this.crawling = false;\n        this.stepTimerHandle = null;\n        this.scoreTimerHandle = null;\n        this.fallTimerHandle = null;\n        this.growTimerHandle = null;\n        this.speedupTimerHandle = null;\n        this.snackTimerHandle = null;\n        this.stepInterval = 10;\n        this.scoreInterval = 1000;\n        this.growInterval = 3000;\n        this.speedupInterval = 10000;\n        this.snackInterval = 2500;\n        this.setSubscribers();\n    }\n\n    startGame() {\n        // this.stepTimerHandle = setInterval(() => {\n        //     this.stepNdraw();\n        // }, this.stepInterval);\n        // this.growTimerHandle = setInterval(() => {\n        //     this.grow();\n        // }, this.growInterval);\n        // this.speedupTimerHandle = setInterval(() => {\n        //     this.speedup();\n        // }, this.speedupInterval);\n        // this.snackTimerHandle = setInterval(() => {\n        //     this.addSnack();\n        // }, this.snackInterval);\n        // this.scoreTimerHandle = setInterval(() => {\n        //     this.scoreUpdate();\n        // }, this.scoreInterval);\n        this.crawling = true;\n    }\n\n    fall() {\n        this.fallTimerHandle = setInterval(() => {\n            this.fallNdraw();\n        }, 0);\n    }\n\n    clearTimedEvents() {\n        clearInterval(this.stepTimerHandle);\n        clearInterval(this.fallTimerHandle);\n        clearInterval(this.growTimerHandle);\n        clearInterval(this.speedupTimerHandle);\n        clearInterval(this.snackTimerHandle);\n        clearInterval(this.scoreTimerHandle);\n    }\n\n    pauseGame() {\n        if (this.crawling) {\n            this.pause = !this.pause;\n            if (this.pause) {\n                this.clearTimedEvents();\n            } else {\n                this.startGame();\n            }\n        }\n    }\n\n    restartIntervals() {\n        this.clearTimedEvents();\n        this.crawl();\n    }\n\n    restart() {\n        if (!this.pause) {\n            this.clearTimedEvents();\n            this.initStuff();\n            this.startGame();\n        }\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            switch (response) {\n                case 'Enter': this.ea.publish('start');\n                    break;\n                case ' ': this.ea.publish('pause');\n                    break;\n            }\n        });\n        this.ea.subscribe('start', response => {\n            this.restart();\n        });\n        this.ea.subscribe('pause', response => {\n            this.pauseGame();\n        });\n    }\n\n    initStuff() {\n        this.stepInterval = 10;\n    }\n\n    // gameScreen.fadeArena();\n    // gameScreen.drawSnacks();\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}