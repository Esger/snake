{"version":3,"sources":["app.js","environment.js","keystroke-service.js","main.js","resources/index.js","components/restart-overlay.js"],"names":["App","keystrokeService","eventAggregator","ea","accelleration","message","spriteSize","stepTimerHandle","snake","directions","deadSegments","growInterval","images","segments","stepInterval","steps","turnSteps","crawl","setInterval","stepNdraw","fall","fallNdraw","fadeArena","grow","i","length","segment","advanceSegment","followSegment","drawSegment","wallHit","die","direction","floorHit","clearInterval","gameOver","position","canvas","height","head","width","console","log","accellerate","speedFactor","j","preceder","dx","dy","axis","tail","dir","x","y","push","ctx","imageIndex","save","translate","rotate","Math","PI","drawImage","restore","fillStyle","fillRect","setSubscribers","subscribe","response","initSnake","canvasCenter","parseInt","$arena","setDomVars","document","getElementById","getContext","clientWidth","clientHeight","wallSize","css","limits","right","bottom","left","top","attached","debug","testing","KeystrokeService","acceptMoves","keys","myKeypressCallback","keypressInput","bind","keysOff","keysOn","addEventListener","e","keycode","event","key","publish","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BoardCustomElement","showOverlay"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './keystroke-service';\n\n@inject(KeystrokeService, EventAggregator)\n\nexport class App {\n\n\n    constructor(keystrokeService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.ea = eventAggregator;\n        this.accelleration = 1.01;\n        this.message = 'Snake by ashWare';\n        this.spriteSize = 16;\n        this.stepTimerHandle = null;\n        this.snake = {\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1],\n                [0, 0]\n            ],\n            deadSegments: 0,\n            growInterval: 10 * this.spriteSize,\n            images: [],\n            segments: [],\n            stepInterval: 10,\n            steps: 0,\n            turnSteps: 0\n        }\n    }\n\n    crawl() {\n        this.stepTimerHandle = setInterval(() => {\n            this.stepNdraw();\n        }, this.snake.stepInterval);\n    }\n\n    fall() {\n        this.stepTimerHandle = setInterval(() => {\n            this.fallNdraw();\n        }, 0);\n    }\n\n    stepNdraw() {\n        this.fadeArena();\n        this.snake.steps++;\n        (this.snake.turnSteps > 0) && this.snake.turnSteps--;\n        (this.snake.steps % this.snake.growInterval == 0) && this.grow();\n        for (let i = 0; i < this.snake.segments.length; i++) {\n            let segment = this.snake.segments[i];\n            (i == 0) ? this.advanceSegment(i) : this.followSegment(i, i - 1);\n            this.drawSegment(segment, i);\n        }\n        this.wallHit() && this.die();\n    }\n\n    fallNdraw() {\n        this.fadeArena();\n        for (let i = 0; i < this.snake.segments.length; i++) {\n            let segment = this.snake.segments[i];\n            (segment.direction < 4) && this.advanceSegment(i, true);\n            this.drawSegment(segment, i);\n            if (segment.direction < 4 && this.floorHit(segment)) {\n                this.snake.deadSegments++;\n                segment.direction = 4;\n            }\n        }\n        if (this.snake.deadSegments >= this.snake.segments.length) {\n            clearInterval(this.stepTimerHandle);\n            this.gameOver();\n        }\n    }\n\n    floorHit(segment) {\n        return segment.position[1] + this.spriteSize / 2 > this.canvas.height;\n    }\n\n    wallHit() {\n        let head = this.snake.segments[0];\n        return head.position[0] > this.canvas.width ||\n            head.position[0] < 0 ||\n            head.position[1] > this.canvas.height ||\n            head.position[1] < 0;\n    }\n\n    die() {\n        clearInterval(this.stepTimerHandle);\n        for (var i = 0; i < this.snake.segments.length; i++) {\n            this.snake.segments[i].direction = 1;\n        }\n        this.fall();\n    }\n\n    gameOver() {\n        console.log('Game Over');\n    }\n\n    advanceSegment(i, accellerate) {\n        let segment = this.snake.segments[i];\n        (accellerate) && (segment.speedFactor *= this.accelleration);\n        segment.position[0] += this.snake.directions[segment.direction][0] * segment.speedFactor;\n        segment.position[1] += this.snake.directions[segment.direction][1] * segment.speedFactor;\n    }\n\n    followSegment(i, j) {\n        let segment = this.snake.segments[i];\n        let preceder = this.snake.segments[j];\n        let dx = preceder.position[0] - segment.position[0];\n        let dy = preceder.position[1] - segment.position[1];\n        let axis = (segment.direction % 2 == 0) ? 'x' : 'y';\n        if (preceder.direction !== segment.direction) {\n            if (axis == 'x') {\n                segment.direction = (dx == 0) ? preceder.direction : segment.direction;\n            } else {\n                segment.direction = (dy == 0) ? preceder.direction : segment.direction;\n            }\n        }\n        this.advanceSegment(i);\n    }\n\n    grow() {\n        let tail = this.snake.segments[this.snake.segments.length - 1];\n        let dir = tail.direction;\n        let x = tail.position[0] - this.snake.directions[dir][0] * this.spriteSize;\n        let y = tail.position[1] - this.snake.directions[dir][1] * this.spriteSize;\n        this.snake.segments.push(new this.segment(dir, x, y));\n    }\n\n    drawSegment(segment, i) {\n        let ctx = this.ctx;\n        let imageIndex = 1;\n        switch (i) {\n            case 0: imageIndex = 0;\n                break;\n            case this.snake.segments.length - 1: imageIndex = 2;\n                break;\n        }\n        ctx.save();\n        ctx.translate(segment.position[0], segment.position[1]);\n        (imageIndex !== 1) && ctx.rotate(segment.direction * Math.PI / 2);\n        ctx.drawImage(this.snake.images[imageIndex], -this.spriteSize / 2, -this.spriteSize / 2);\n        ctx.restore();\n    }\n\n    fadeArena() {\n        let ctx = this.ctx;\n        ctx.fillStyle = 'rgba(0,0,0,.1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    setSubscribers() {\n        let head = this.snake.segments[0];\n        this.ea.subscribe('keyPressed', response => {\n            if (this.snake.turnSteps == 0) {\n                this.snake.turnSteps = 17;\n                switch (response) {\n                    case 'ArrowRight': head.direction = 0;\n                        break;\n                    case 'ArrowDown': head.direction = 1;\n                        break;\n                    case 'ArrowLeft': head.direction = 2;\n                        break;\n                    case 'ArrowUp': head.direction = 3;\n                        break;\n                    default: null;\n                }\n            }\n        });\n    }\n\n    segment(direction, x, y) {\n        return {\n            direction: direction,\n            position: [x, y],\n            speedFactor: 1\n        }\n    }\n\n    initSnake() {\n        let canvasCenter = {\n            x: parseInt(this.$arena.width() / 2, 10),\n            y: parseInt(this.$arena.height() / 2, 10)\n        };\n        this.snake.segments.push(new this.segment(0, canvasCenter.x, canvasCenter.y));\n    }\n\n    setDomVars() {\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.wallSize = parseInt(this.$arena.css('borderWidth'), 10);\n        this.limits = {\n            right: this.canvas.width - this.wallSize,\n            bottom: this.canvas.height - this.wallSize,\n            left: this.wallSize,\n            top: this.wallSize\n        }\n        this.snake.images = [\n            $('.head')[0],\n            $('.body')[0],\n            $('.tail')[0]\n        ]\n    }\n\n    attached() {\n        this.setDomVars();\n        this.initSnake();\n        this.setSubscribers();\n        $(() => {\n            this.crawl();\n        });\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.keys = {\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        this.ea.publish('keyPressed', keycode);\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class BoardCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.showOverlay = true;\n        // this.ea.subscribe('panZoom', response => {\n        //     this.panZoomMaze(response);\n        // });\n        // this.ea.subscribe('restart', response => {\n        //     this.resetBoard();\n        // });\n\n    }\n\n    attached() {\n    }\n\n}\n"],"sourceRoot":"../src"}