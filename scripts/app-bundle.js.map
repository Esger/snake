{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","message","stepTimerHandle","snake","segments","crawl","setInterval","x","drawSnake","drawSegment","i","length","segment","imgObj","ctx","offsetX","img","clientWidth","offsetY","clientHeight","save","translate","y","drawImage","restore","initSnake","canvasCenter","parseInt","$arena","width","height","snakeImages","$img","push","setDomVars","canvas","document","getElementById","getContext","attached","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n\nimport $ from 'jquery';\n\nexport class App {\n\n    constructor() {\n        this.message = 'Snake by ashWare';\n        this.stepTimerHandle = null;\n        this.snake = {\n            segments: []\n        }\n    }\n\n    crawl() {\n        this.stepTimerHandle = setInterval(() => {\n            this.snake.segments[0].x++;\n            this.drawSnake();\n            this.drawSegment(this.snake.segments[0]);\n        }, 100);\n    }\n\n    drawSnake() {\n        for (let i = 0; i < this.snake.segments.length; i++) {\n            let segment = this.snake.segments[i];\n            this.drawSegment(segment);\n        }\n    }\n\n    drawSegment(imgObj) {\n        let ctx = this.ctx;\n        let offsetX = -imgObj.img.clientWidth;\n        let offsetY = -imgObj.img.clientHeight;\n        ctx.save();\n        ctx.translate(imgObj.x, imgObj.y);\n        ctx.drawImage(imgObj.img, offsetX, offsetY);\n        ctx.restore();\n    }\n\n    initSnake() {\n        let canvasCenter = {\n            x: parseInt(this.$arena.width() / 2, 10),\n            y: parseInt(this.$arena.height() / 2, 10)\n        };\n        for (let i = 0; i < this.snakeImages.length; i++) {\n            let $img = this.snakeImages[i];\n            let segment = {\n                img: $img[0],\n                x: canvasCenter.x,\n                y: canvasCenter.y\n            }\n            this.snake.segments.push(segment);\n        }\n    }\n\n    setDomVars() {\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.snakeImages = [\n            $('.body'),\n            $('.head'),\n            $('.tail')\n        ]\n    }\n\n    attached() {\n        this.setDomVars();\n        this.initSnake();\n        $(() => {\n            this.crawl();\n        });\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}