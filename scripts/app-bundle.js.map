{"version":3,"sources":["app.js","environment.js","main.js","components/game-screen.js","components/restart-overlay.js","components/status.js","resources/index.js","services/keystroke-service.js","services/screen-service.js","services/snack-service.js","services/snake-service.js","services/timing-service.js"],"names":["App","keystrokeService","timingService","eventAggregator","ea","message","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","GameScreenCustomElement","RestartOverlayCustomElement","showOverlay","firstGame","pause","publish","addEventListeners","subscribe","attached","StatusCustomElement","speed","length","score","snack","response","setTimeout","KeystrokeService","acceptMoves","myKeypressCallback","keypressInput","bind","setSubscribers","keysOff","keysOn","document","addEventListener","e","keycode","event","key","ScreenService","drawSegment","segment","ctx","save","translate","position","type","rotate","direction","Math","PI","drawImage","snakeImages","halfSprite","restore","drawSnack","snacksImages","index","snackSize","drawSnacks","snacks","onBoard","forEach","gameScreen","fadeArena","fillStyle","fillRect","canvas","width","height","$arena","$","getElementById","getContext","clientWidth","clientHeight","wallSize","parseInt","css","limits","right","bottom","left","top","spriteSize","halfSnackSize","SnackService","images","methods","newSnack","x","y","name","i","addSnack","floor","random","className","push","initStuff","SnakeService","snake","segments","directions","steps","turnSteps","deadSegments","accelleration","speedFactor","allDown","stepNdraw","advanceSegment","followSegment","hitSnack","hitSnake","hitWall","die","fallNdraw","hitFloor","clearTimedEvents","gameOver","head","wallHit","self","overlap","segPos","headPos","dx","abs","dy","xOverlap","yOverlap","snackPos","splice","cutSnake","halfSnake","growHarder","growInterval","restartIntervals","growSlower","score100","scoreUpdate","score10","scoreX10","scoreInterval","trashSnacks","speedup","stepInterval","slowdown","console","log","grow","tail","dir","factor","lastSegment","crawling","fall","amount","accellerate","j","preceder","axis","startsWith","restart","pauseGame","canvasCenter","TimingService","stepTimerHandle","scoreTimerHandle","fallTimerHandle","growTimerHandle","speedupTimerHandle","snackTimerHandle","speedupInterval","snackInterval","startGame","setInterval","clearInterval","crawl"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './services/keystroke-service';\nimport { TimingService } from './services/timing-service';\n\n@inject(KeystrokeService, TimingService, EventAggregator)\n\nexport class App {\n\n    constructor(keystrokeService, timingService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.timingService = timingService;\n        this.ea = eventAggregator;\n        this.message = 'Snake by ashWare';\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class GameScreenCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class RestartOverlayCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.showOverlay = true;\n        this.firstGame = true;\n        this.pause = false;\n    }\n\n    start() {\n        this.ea.publish('start');\n        this.showOverlay = false;\n        this.firstGame = false;\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('gameOver', response => {\n            this.showOverlay = true;\n        });\n        this.ea.subscribe('start', response => {\n            this.showOverlay = false;\n        });\n        this.ea.subscribe('pause', response => {\n            this.pause = !this.pause;\n        });\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class StatusCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.speed = 0;\n        this.length = 2;\n        this.score = 0;\n        this.snack = '';\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('speedChange', response => {\n            this.speed += response;\n        });\n        this.ea.subscribe('grow', response => {\n            this.length = response;\n        });\n        this.ea.subscribe('restart', response => {\n            this.length = 1;\n            this.speed = 0;\n        });\n        this.ea.subscribe('score', response => {\n            this.score = response;\n        });\n        this.ea.subscribe('snack', response => {\n            this.snack = response;\n            setTimeout(() => {\n                this.snack = '';\n            }, 15000);\n        });\n\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        (this.acceptMoves) && this.ea.publish('keyPressed', keycode);\n    }\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class ScreenService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.setSubscribers();\n    }\n\n    drawSegment(segment) {\n        let ctx = this.ctx;\n        ctx.save();\n        ctx.translate(segment.position[0], segment.position[1]);\n        (segment.type !== 1) && ctx.rotate(segment.direction * Math.PI / 2);\n        ctx.drawImage(this.snakeImages[segment.type], -this.halfSprite, -this.halfSprite);\n        ctx.restore();\n    }\n\n    drawSnack(snack) {\n        let ctx = this.ctx;\n        ctx.save();\n        // ctx.strokeStyle = 'goldenrod';\n        // ctx.rect(snack.position[0], snack.position[1], this.snackSize, this.snackSize);\n        // ctx.stroke();\n        ctx.translate(snack.position[0], snack.position[1]);\n        // snacks are 2x larger\n        ctx.drawImage(this.snacksImages[snack.index], 0, 0, this.snackSize, this.snackSize);\n        ctx.restore();\n    }\n\n    drawSnacks() {\n        this.snacks.onBoard.forEach((snack) => {\n            gameScreen.drawSnack(snack);\n        })\n    }\n    fadeArena() {\n        let ctx = this.ctx;\n        ctx.fillStyle = 'rgba(0,0,0,.1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    attached() {\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.wallSize = parseInt(this.$arena.css('borderWidth'), 10);\n        this.limits = {\n            right: this.canvas.width - this.wallSize,\n            bottom: this.canvas.height - this.wallSize,\n            left: this.wallSize,\n            top: this.wallSize\n        };\n        this.spriteSize = 16;\n        this.halfSprite = this.spriteSize / 2;\n        this.snackSize = 24;\n        this.halfSnackSize = this.snackSize / 2;\n        this.snakeImages = [\n            $('.head')[0],\n            $('.body')[0],\n            $('.tail')[0]\n        ];\n        this.snacksImages = [\n            $('.axe')[0],\n            $('.beer')[0],\n            $('.bunny')[0],\n            $('.diamond')[0],\n            $('.gold')[0],\n            $('.ruby')[0],\n            $('.skull')[0],\n            $('.snail')[0],\n            $('.trash')[0],\n            $('.viagra')[0]\n        ];\n    }\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class SnackService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.snacks = {\n            images: [],\n            onBoard: [],\n            methods: {\n                'axe': 'cutSnake',\n                'beer': 'growSlower',\n                'bunny': 'speedup',\n                'diamond': 'score100',\n                'gold': 'score10',\n                'ruby': 'scoreX10',\n                'skull': 'die',\n                'snail': 'slowdown',\n                'trash': 'trashSnacks',\n                'viagra': 'growHarder'\n            }\n        }\n\n        this.setSubscribers();\n    }\n\n    newSnack(x, y, name, i) {\n        let snack = {\n            position: [x, y],\n            name: name,\n            index: i\n        }\n        return snack;\n    }\n\n    addSnack() {\n        let snack = Math.floor(Math.random() * this.snacks.images.length);\n        let name = this.snacks.images[snack].className;\n        // compensate for border width (24);\n        let x = Math.floor(Math.random() * this.canvas.width - 24) + 24;\n        let y = Math.floor(Math.random() * this.canvas.height - 24) + 24;\n        this.snacks.onBoard.push(this.newSnack(x, y, name, snack));\n    }\n\n    initStuff() {\n        this.snacks.onBoard = [];\n    }\n\n\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class SnakeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.snake = {\n            segments: [],\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1],\n                [0, 0]\n            ],\n            steps: 0,\n            turnSteps: 0,\n            deadSegments: 0\n        }\n        this.accelleration = 1.01;\n        this.score = 0;\n\n        this.setSubscribers();\n    }\n\n    segment(direction, speedFactor, x, y) {\n        return {\n            direction: direction,\n            position: [x, y],\n            speedFactor: speedFactor,\n            type: 2 // 'tail'\n        }\n    }\n\n    allDown() {\n        this.snake.segments.forEach((segment) => {\n            segment.direction = 1;\n            segment.speedFactor = 1;\n        });\n    }\n\n    stepNdraw() {\n        this.snake.steps += 1;\n        // limit the rate at which turns are accepted\n        (this.snake.turnSteps > 0) && this.snake.turnSteps--;\n        this.snake.segments.forEach((segment, i) => {\n            (i == 0) ? this.advanceSegment(i) : this.followSegment(i, i - 1);\n            gameScreen.drawSegment(segment, i);\n        });\n        let snack = this.hitSnack();\n        // call the function named with value of snack\n        (snack !== '') && this[snack]();\n        (this.hitSnake() || this.hitWall()) && this.die();\n    }\n\n    fallNdraw() {\n        gameScreen.fadeArena();\n        this.snake.segments.forEach((segment, i) => {\n            (segment.direction < 4) && this.advanceSegment(i, true);\n            gameScreen.drawSegment(segment, i);\n            if (segment.direction < 4 && this.hitFloor(segment)) {\n                this.snake.deadSegments++;\n                segment.direction = 4;\n            }\n        });\n\n        // Where does this go?\n        if (this.snake.deadSegments >= this.snake.segments.length) {\n            this.clearTimedEvents();\n            this.keysOn();\n            this.gameOver();\n        }\n    }\n\n    hitFloor(segment) {\n        return segment.position[1] + this.halfSprite > this.canvas.height;\n    }\n\n    hitWall() {\n        let head = this.snake.segments[0];\n        let wallHit = head.position[0] > this.canvas.width - this.halfSprite ||\n            head.position[0] < 0 + this.halfSprite ||\n            head.position[1] > this.canvas.height - this.halfSprite ||\n            head.position[1] < 0 + this.halfSprite;\n        if (wallHit) {\n            this.ea.publish('snack', 'You hit a wall');\n            return wallHit;\n        }\n    }\n\n    hitSnake() {\n        let self = this;\n        let head = this.snake.segments[0];\n        function overlap(segPos, headPos) {\n            let dx = Math.abs(segPos[0] - headPos[0]);\n            let dy = Math.abs(segPos[1] - headPos[1]);\n            let xOverlap = dx < self.halfSprite;\n            let yOverlap = dy < self.halfSprite;\n            return xOverlap && yOverlap;\n        }\n        for (let i = 1; i < this.snake.segments.length - 1; i++) {\n            let segment = this.snake.segments[i];\n            if (overlap(segment.position, head.position)) {\n                this.ea.publish('snack', 'You tried to eat yourself that&rsquo;s deadly');\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hitSnack() {\n        let self = this;\n        let head = this.snake.segments[0];\n        function overlap(snackPos, headPos) {\n            let dx = Math.abs(snackPos[0] - headPos[0]);\n            let dy = Math.abs(snackPos[1] - headPos[1]);\n            let xOverlap = dx < (self.snackSize + self.spriteSize) / 2;\n            let yOverlap = dy < (self.snackSize + self.spriteSize) / 2;\n            return xOverlap && yOverlap;\n        }\n        for (let i = 0; i < this.snacks.onBoard.length - 1; i++) {\n            let snack = this.snacks.onBoard[i];\n            if (overlap(snack.position, head.position)) {\n                (i > -1) && this.snacks.onBoard.splice(i, 1);\n                return this.snacks.methods[snack.name];\n            }\n        }\n        return '';\n    }\n\n    cutSnake() {\n        let halfSnake = Math.floor(this.snake.segments.length / 2)\n        this.snake.segments.splice(-halfSnake);\n        this.ea.publish('snack', 'Axe: you lost half of your length');\n    }\n\n    growHarder() {\n        if (this.growInterval > 500) {\n            this.growInterval -= 500;\n            this.restartIntervals();\n            setTimeout(() => {\n                this.growInterval += 500;\n                this.restartIntervals();\n            }, 15000);\n            this.ea.publish('snack', 'Blue pill: growing harder for 15 seconds');\n        }\n    }\n    growSlower() {\n        this.growInterval += 500;\n        this.restartIntervals();\n        setTimeout(() => {\n            this.growInterval -= 500;\n            this.restartIntervals();\n        }, 15000);\n        this.ea.publish('snack', 'Beer: growing slower for 15 seconds');\n    }\n    score100() {\n        this.scoreUpdate(1000);\n        this.ea.publish('snack', 'Diamond: you scored 1000 points');\n    }\n    score10() {\n        this.scoreUpdate(100);\n        this.ea.publish('snack', 'Gold: you scored 100 points');\n    }\n    scoreX10() {\n        if (this.scoreInterval > 250) {\n            this.scoreInterval -= 250;\n            setTimeout(() => {\n                this.scoreInterval += 250;\n            }, 15000);\n            this.ea.publish('snack', 'Ruby: scoring faster for 15 seconds');\n        }\n    }\n    trashSnacks() {\n        this.snacks.onBoard = [];\n        this.ea.publish('snack', 'Trash: you trashed all extra&rsquo;s');\n    }\n\n    speedup() {\n        if (this.stepInterval > 0) {\n            this.stepInterval -= 1;\n            this.restartIntervals();\n            this.ea.publish('speedChange', 1);\n        } else {\n            this.snake.segments.forEach((segment) => {\n                segment.speedFactor += 1;\n            });\n            this.stepInterval = 7;\n            this.ea.publish('speedChange', 7);\n        }\n        this.ea.publish('snack', 'Rabbit: running faster');\n    }\n\n    slowdown() {\n        console.log('slowdown');\n        if (this.snake.segments[0].speedFactor > 1) {\n            this.snake.segments.forEach((segment) => {\n                segment.speedFactor -= 1;\n            });\n            this.ea.publish('speedChange', -7);\n        } else {\n            if (this.stepInterval < 7) {\n                this.stepInterval += 1;\n                this.restartIntervals();\n                this.ea.publish('speedChange', -1);\n            }\n        }\n        this.ea.publish('snack', 'Snail: running slower');\n    }\n\n    grow() {\n        let tail = this.snake.segments[this.snake.segments.length - 1];\n        let dir = tail.direction;\n        let factor = tail.speedFactor;\n        let x = tail.position[0] - this.snake.directions[dir][0] * this.spriteSize;\n        let y = tail.position[1] - this.snake.directions[dir][1] * this.spriteSize;\n        this.snake.segments.push(this.segment(dir, factor, x, y));\n        let lastSegment = this.snake.segments.length - 1;\n        this.snake.segments[lastSegment].index = lastSegment;\n        this.snake.segments[lastSegment - 1].type = 1; // body\n        this.ea.publish('grow', this.snake.segments.length);\n    }\n\n    die() {\n        this.keysOff();\n        this.crawling = false;\n        this.clearTimedEvents()\n        this.fall();\n    }\n\n    scoreUpdate(amount) {\n        if (amount) {\n            this.score += amount;\n        } else {\n            this.score += this.snake.segments.length;\n        }\n        this.ea.publish('score', this.score);\n    }\n\n    gameOver() {\n        this.ea.publish('gameOver');\n    }\n\n    advanceSegment(i, accellerate) {\n        let segment = this.snake.segments[i];\n        // when falling accellerate = true\n        (accellerate) && (segment.speedFactor *= this.accelleration);\n        segment.position[0] += parseInt(this.snake.directions[segment.direction][0] * segment.speedFactor, 10);\n        segment.position[1] += parseInt(this.snake.directions[segment.direction][1] * segment.speedFactor, 10);\n    }\n\n    followSegment(i, j) {\n        let segment = this.snake.segments[i];\n        let preceder = this.snake.segments[j];\n        let dx = Math.abs(preceder.position[0] - segment.position[0]);\n        let dy = Math.abs(preceder.position[1] - segment.position[1]);\n        let axis = (segment.direction % 2 == 0) ? 'x' : 'y';\n        if (preceder.direction !== segment.direction) {\n            if (axis == 'x') {\n                if (dx < this.spriteSize && dy > this.spriteSize) {\n                    segment.direction = preceder.direction;\n                    segment.position[0] = preceder.position[0];\n                }\n            } else {\n                if (dy < this.spriteSize && dx > this.spriteSize) {\n                    segment.direction = preceder.direction;\n                    segment.position[1] = preceder.position[1];\n                }\n            }\n        }\n        this.advanceSegment(i);\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            if (response.startsWith('Arrow') && this.snake.turnSteps == 0) {\n                this.snake.turnSteps = 17;\n                switch (response) {\n                    case 'ArrowRight': direction = 0;\n                        break;\n                    case 'ArrowDown': direction = 1;\n                        break;\n                    case 'ArrowLeft': direction = 2;\n                        break;\n                    case 'ArrowUp': direction = 3;\n                        break;\n                }\n                (((direction + 2) % 4) !== this.snake.segments[0].direction) && (this.snake.segments[0].direction = direction);\n            }\n            switch (response) {\n                case 'Enter': this.ea.publish('restart');\n                    break;\n                case ' ': if (this.crawling) { this.ea.publish('pause'); }\n                    break;\n            }\n        });\n        this.ea.subscribe('restart', response => {\n            this.restart();\n        });\n        this.ea.subscribe('pause', response => {\n            this.pauseGame();\n        });\n    }\n\n    initStuff() {\n        let canvasCenter = {\n            x: parseInt(gameScreen.$arena.width() / 2, 10),\n            y: parseInt(gameScreen.$arena.height() / 2, 10)\n        };\n        this.snake.segments = [];\n        this.snake.deadSegments = 0;\n        this.snake.steps = 0;\n        this.snake.turnSteps = 0;\n        this.snake.segments.push(this.segment(0, 1, canvasCenter.x, canvasCenter.y));\n        let lastSegment = this.snake.segments.length - 1;\n        this.snake.segments[lastSegment].index = lastSegment;\n        this.snake.segments[lastSegment].type = 0; // head\n        this.score = 0;\n    }\n\n\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class TimingService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.pause = false;\n        this.crawling = false;\n        this.stepTimerHandle = null;\n        this.scoreTimerHandle = null;\n        this.fallTimerHandle = null;\n        this.growTimerHandle = null;\n        this.speedupTimerHandle = null;\n        this.snackTimerHandle = null;\n        this.stepInterval = 10;\n        this.scoreInterval = 1000;\n        this.growInterval = 3000;\n        this.speedupInterval = 10000;\n        this.snackInterval = 2500;\n        this.setSubscribers();\n    }\n\n    startGame() {\n        // this.stepTimerHandle = setInterval(() => {\n        //     this.stepNdraw();\n        // }, this.stepInterval);\n        // this.growTimerHandle = setInterval(() => {\n        //     this.grow();\n        // }, this.growInterval);\n        // this.speedupTimerHandle = setInterval(() => {\n        //     this.speedup();\n        // }, this.speedupInterval);\n        // this.snackTimerHandle = setInterval(() => {\n        //     this.addSnack();\n        // }, this.snackInterval);\n        // this.scoreTimerHandle = setInterval(() => {\n        //     this.scoreUpdate();\n        // }, this.scoreInterval);\n        this.crawling = true;\n    }\n\n    fall() {\n        this.fallTimerHandle = setInterval(() => {\n            this.fallNdraw();\n        }, 0);\n    }\n\n    clearTimedEvents() {\n        clearInterval(this.stepTimerHandle);\n        clearInterval(this.fallTimerHandle);\n        clearInterval(this.growTimerHandle);\n        clearInterval(this.speedupTimerHandle);\n        clearInterval(this.snackTimerHandle);\n        clearInterval(this.scoreTimerHandle);\n    }\n\n    pauseGame() {\n        if (this.crawling) {\n            this.pause = !this.pause;\n            if (this.pause) {\n                this.clearTimedEvents();\n            } else {\n                this.startGame();\n            }\n        }\n    }\n\n    restartIntervals() {\n        this.clearTimedEvents();\n        this.crawl();\n    }\n\n    restart() {\n        if (!this.pause) {\n            this.clearTimedEvents();\n            this.initStuff();\n            this.startGame();\n        }\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            switch (response) {\n                case 'Enter': this.ea.publish('start');\n                    break;\n                case ' ': this.ea.publish('pause');\n                    break;\n            }\n        });\n        this.ea.subscribe('start', response => {\n            this.restart();\n        });\n        this.ea.subscribe('pause', response => {\n            this.pauseGame();\n        });\n    }\n\n    initStuff() {\n        this.stepInterval = 10;\n    }\n\n    // gameScreen.fadeArena();\n    // gameScreen.drawSnacks();\n\n}"],"sourceRoot":"../src"}