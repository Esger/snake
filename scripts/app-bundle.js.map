{"version":3,"sources":["app.js","environment.js","keystroke-service.js","main.js","resources/index.js"],"names":["App","keystrokeService","eventAggregator","ea","message","spriteSize","stepTimerHandle","snake","directions","images","segments","stepInterval","crawl","setInterval","stepNdraw","fadeArena","i","length","segment","advanceSegment","followSegment","drawSegment","position","direction","j","preceder","dx","dy","absDx","Math","abs","stepX","round","absDy","stepY","ctx","imageIndex","save","translate","rotate","PI","drawImage","restore","fillStyle","fillRect","canvas","width","height","setSubscribers","head","subscribe","response","initSnake","canvasCenter","x","parseInt","$arena","y","push","setDomVars","document","getElementById","getContext","clientWidth","clientHeight","attached","debug","testing","KeystrokeService","acceptMoves","keys","myKeypressCallback","keypressInput","bind","keysOff","keysOn","addEventListener","e","keycode","event","key","publish","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './keystroke-service';\n\n@inject(KeystrokeService, EventAggregator)\n\nexport class App {\n\n    constructor(keystrokeService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.ea = eventAggregator;\n        this.message = 'Snake by ashWare';\n        this.spriteSize = 16;\n        this.stepTimerHandle = null;\n        this.snake = {\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1]\n            ],\n            images: [],\n            segments: [],\n            stepInterval: 100\n        }\n    }\n\n    crawl() {\n        this.stepTimerHandle = setInterval(() => {\n            this.stepNdraw();\n        }, this.snake.stepInterval);\n    }\n\n    stepNdraw() {\n        this.fadeArena();\n        for (let i = 0; i < this.snake.segments.length; i++) {\n            let segment = this.snake.segments[i];\n            (i == 0) ? this.advanceSegment(i) : this.followSegment(i, i - 1);\n            this.drawSegment(segment, i);\n        }\n    }\n\n    advanceSegment(i) {\n        let segment = this.snake.segments[i];\n        segment.position[0] += this.snake.directions[segment.direction][0];\n        segment.position[1] += this.snake.directions[segment.direction][1];\n    }\n\n    followSegment(i, j) {\n        let segment = this.snake.segments[i];\n        let preceder = this.snake.segments[j];\n        let dx = preceder.position[0] - segment.position[0];\n        let dy = preceder.position[1] - segment.position[1];\n        if (dx !== 0) {\n            let absDx = Math.abs(dx)\n            let stepX = Math.round(absDx / dx);\n            (absDx > this.spriteSize) ? segment.position[0] += stepX : null;\n        }\n        if (dy !== 0) {\n            let absDy = Math.abs(dy)\n            let stepY = Math.round(absDy / dy);\n            (absDy > this.spriteSize) ? segment.position[1] += stepY : null;\n        }\n    }\n\n    drawSegment(segment, i) {\n        let ctx = this.ctx;\n        let imageIndex = 1;\n        switch (i) {\n            case 0: imageIndex = 0;\n                break;\n            case this.snake.segments.length: imageIndex = 2;\n                break;\n        }\n        ctx.save();\n        ctx.translate(segment.position[0], segment.position[1]);\n        ctx.rotate(segment.direction * Math.PI / 2);\n        ctx.drawImage(this.snake.images[imageIndex], -this.spriteSize / 2, -this.spriteSize / 2);\n        ctx.restore();\n    }\n\n    fadeArena() {\n        let ctx = this.ctx;\n        ctx.fillStyle = 'rgba(0,0,0,.1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    setSubscribers() {\n        let head = this.snake.segments[0];\n        this.ea.subscribe('keyPressed', response => {\n            switch (response) {\n                case 'ArrowRight': head.direction = 0;\n                    break;\n                case 'ArrowDown': head.direction = 1;\n                    break;\n                case 'ArrowLeft': head.direction = 2;\n                    break;\n                case 'ArrowUp': head.direction = 3;\n                    break;\n                default: null;\n            }\n        });\n    }\n\n    initSnake() {\n        let canvasCenter = {\n            x: parseInt(this.$arena.width() / 2, 10),\n            y: parseInt(this.$arena.height() / 2, 10)\n        };\n        let segment = {\n            direction: 0,\n            position: [canvasCenter.x, canvasCenter.y]\n        }\n        this.snake.segments.push(segment);\n    }\n\n    setDomVars() {\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.snake.images = [\n            $('.head')[0],\n            $('.body')[0],\n            $('.tail')[0]\n        ]\n    }\n\n    attached() {\n        this.setDomVars();\n        this.initSnake();\n        this.setSubscribers();\n        $(() => {\n            this.crawl();\n        });\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.keys = {\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        this.ea.publish('keyPressed', keycode);\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}