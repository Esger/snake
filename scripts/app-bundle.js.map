{"version":3,"sources":["app.js","environment.js","main.js","components/game-screen.js","components/restart-overlay.js","components/status.js","resources/index.js","services/keystroke-service.js","services/score-service.js","services/screen-service.js","services/snack-service.js","services/snake-service.js","services/timing-service.js","services/touch-service.js"],"names":["App","keystrokeService","timingService","eventAggregator","ea","message","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","start","then","setRoot","GameScreenCustomElement","touchService","screenService","snakeService","snackService","snakeImages","snackImages","spriteSize","snakeParts","snackNames","names","snacks","animationTime","getAnimationTime","handleTouch","event","publish","roundToSpriteSize","size","Math","floor","snakeImage","index","snake","segments","length","segmentCSS","x","y","rotationStr","rotation","direction","css","snackPosition","snack","left","position","top","attached","self","$arena","$","$body","targetWidth","width","targetHeight","height","setAreaSize","setDomVars","setCenter","RestartOverlayCustomElement","showOverlay","firstGame","started","pause","addEventListeners","subscribe","StatusCustomElement","score","highScore","resetVars","speed","response","setTimeout","resetHighscore","KeystrokeService","acceptMoves","myKeypressCallback","keypressInput","bind","setSubscribers","keysOff","keysOn","document","addEventListener","e","keycode","key","ScoreService","multiplier","readHighscore","saveHighscore","update","amount","max","setMultiplier","factor","resetMultiplier","set","expiry","hs","get","initScore","ScreenService","halfSprite","snackSize","halfSnackSize","canvasCenter","setAnimationTime","time","canvas","clientWidth","clientHeight","limits","right","bottom","SnackService","newSnack","name","i","nameIndex","samePosition","pos1","pos2","hitSnack","head","neck","removeSnack","addSnack","randomIndex","random","push","splice","initSnacks","SnakeService","directions","deadSegments","snackMethods","nope","axe","cutSnake","beer","bunny","diamond","gold","ruby","skull","snail","trash","viagra","mod","m","n","step","grow","turnSteps","tail","newTail","segmentSize","hitWall","hitSnake","method","toLowerCase","halfSnake","fallDown","crawling","indexOf","segment","newY","wallHit","newDirection","startsWith","directionChange","center","minTurnSteps","ceil","stepSize","initSnake","round","accelleration","TimingService","scoreService","steps","fallTimerHandle","stepTimerHandle","baseGrowInterval","baseScoreInterval","baseSnackInterval","baseSpeedupInterval","maxStepInterval","minStepInterval","changeStepInterval","dropInterval","snackDuration","methods","growSlower","speedUp","multiPlyScore","dropSnake","slowDown","growHarder","startGame","resetIntervals","resumeGame","setInterval","drawScreen","stepInterval","growInterval","speedupInterval","snackInterval","clearTimedEvents","clearInterval","pauseGame","restart","split","scoreInterval","baseSoreInterval","TouchService","$area","clickAreaSize","diagonal","console","log","clickX","clickY","layerX","layerY","offset","touch","touches","pageX","pageY"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './services/keystroke-service';\nimport { TimingService } from './services/timing-service';\n\n@inject(KeystrokeService, TimingService, EventAggregator)\n\nexport class App {\n\n    constructor(keystrokeService, timingService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.timingService = timingService;\n        this.ea = eventAggregator;\n        this.message = 'Snake by ashWare';\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n    longStackTraces: environment.debug,\n    warnings: {\n        wForgottenReturn: false\n    }\n});\n\nexport function configure(aurelia) {\n    aurelia.use\n        .standardConfiguration()\n        .feature('resources')\n\n    aurelia.use\n        .plugin('aurelia-cookie');\n\n    if (environment.debug) {\n        aurelia.use.developmentLogging();\n    }\n\n    if (environment.testing) {\n        aurelia.use.plugin('aurelia-testing');\n    }\n\n    aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport { TouchService } from '../services/touch-service';\nimport { ScreenService } from '../services/screen-service';\nimport { SnakeService } from '../services/snake-service';\nimport { SnackService } from '../services/snack-service';\n\n@inject(EventAggregator, TouchService, ScreenService, SnakeService, SnackService)\n\nexport class GameScreenCustomElement {\n\n    constructor(eventAggregator, touchService, screenService, snakeService, snackService) {\n        this.ea = eventAggregator;\n        this.touchService = touchService;\n        this.screenService = screenService;\n        this.snakeService = snakeService;\n        this.snackService = snackService;\n        this.snakeImages = [];\n        this.snackImages = [];\n        this.spriteSize = 16;\n        // images with these names.jpg should exist in /images/..\n        this.snakeParts = this.snakeService.snakeParts;\n        this.snackNames = this.snackService.names;\n        this.snacks = this.snackService.snacks;\n        this.animationTime = () => { return this.screenService.getAnimationTime(); };\n    }\n\n    handleTouch(event) {\n        this.ea.publish('touch', event);\n    }\n\n    roundToSpriteSize(size) {\n        return Math.floor(size / this.spriteSize) * this.spriteSize;\n    }\n\n    snakeImage(index) {\n        switch (index) {\n            case 0: return 'head';\n            case this.snakeService.snake.segments.length: return 'tail';\n            default: return 'body';\n        }\n    }\n\n    segmentCSS(index, x, y) {\n        let rotationStr = '';\n        if (index == 0) {\n            let rotation = this.snakeService.snake.direction * 90;\n            rotationStr = 'transform: rotate(' + rotation + 'deg);'\n        }\n        let css = 'left: ' + x + 'px; top: ' + y + 'px; ' + rotationStr + ' transition: all ' + this.animationTime + 's linear; -webkit-transition: all ' + this.animationTime() + 's linear;';\n        return css;\n    }\n\n    snackPosition(index) {\n        let snack = this.snackService.snacks[index];\n        return {\n            left: snack.position.x + 'px',\n            top: snack.position.y + 'px'\n        }\n    }\n\n    attached() {\n        let self = this;\n        this.$arena = $('.arena');\n        let $body = $('body');\n        let targetWidth = this.roundToSpriteSize($body.width() - 48);\n        let targetHeight = this.roundToSpriteSize($body.height() - 48);\n        this.$arena.width(targetWidth);\n        this.$arena.height(targetHeight);\n        this.touchService.setAreaSize(this.$arena);\n        this.screenService.setDomVars(this.$arena);\n        this.snakeService.setCenter();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { TouchService } from '../services/touch-service';\n\n@inject(EventAggregator, TouchService)\nexport class RestartOverlayCustomElement {\n\n    constructor(eventAggregator, touchService) {\n        this.ea = eventAggregator;\n        this.touchService = touchService;\n        this.showOverlay = true;\n        this.firstGame = true;\n        this.started = false;\n        this.pause = false;\n    }\n\n    start() {\n        if (!this.started) {\n            this.ea.publish('start');\n            this.showOverlay = false;\n            this.firstGame = false;\n            this.started = true;\n        }\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('gameOver', response => {\n            this.showOverlay = true;\n            this.started = false;\n        });\n        this.ea.subscribe('start', response => {\n            this.showOverlay = false;\n        });\n        this.ea.subscribe('pause', response => {\n            this.pause = !this.pause;\n        });\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class StatusCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.score = 0;\n        this.highScore;\n        this.resetVars();\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('speed', response => {\n            this.speed = response;\n        });\n        this.ea.subscribe('grow', response => {\n            this.length = response;\n        });\n        this.ea.subscribe('start', response => {\n            this.resetVars();\n        });\n        this.ea.subscribe('score', response => {\n            this.score = response.score;\n            this.highScore = response.highScore;\n        });\n        this.ea.subscribe('snack', response => {\n            this.snack = response;\n            setTimeout(() => {\n                this.snack = '';\n            }, 15000);\n        });\n        this.ea.subscribe('die', response => {\n            this.snack = response;\n        });\n\n    }\n\n    resetHighscore() {\n        this.ea.publish('resetHigh');\n    }\n\n    resetVars() {\n        this.speed = 0;\n        this.length = 1;\n        this.score = 0;\n        this.snack = '';\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        (this.acceptMoves) && this.ea.publish('keyPressed', keycode);\n    }\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { AureliaCookie } from 'aurelia-cookie';\n\n@inject(EventAggregator)\n\nexport class ScoreService {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        // this.cookie = aureliaCookie;\n        this.multiplier = 1;\n        this.score = 0;\n        this.highScore = this.readHighscore();\n        this.ea.subscribe('gameOver', response => { this.saveHighscore() });\n        this.ea.subscribe('resetHigh', response => { this.resetHighscore() });\n    }\n\n    update(amount) {\n        (amount) && (this.score += amount * this.multiplier);\n        this.highScore = Math.max(this.score, this.highScore);\n        this.ea.publish('score', {\n            score: this.score,\n            highScore: this.highScore\n        });\n    }\n\n    setMultiplier(factor) {\n        if (factor) {\n            this.multiplier = factor;\n        } else {\n            this.multiplier = 10;\n        }\n    }\n\n    resetMultiplier() {\n        this.multiplier = 1;\n    }\n\n    saveHighscore() {\n        AureliaCookie.set('highScore', this.highScore, {\n            expiry: -1,\n        });\n    }\n\n    readHighscore() {\n        let hs = AureliaCookie.get('highScore');\n        if (hs > 0) {\n            return hs;\n        }\n        return 0;\n    }\n\n    resetHighscore() {\n        this.highScore = 0;\n        this.saveHighscore();\n    }\n\n    initScore() {\n        this.score = 0;\n    }\n\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class ScreenService {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.spriteSize = 16;\n        this.halfSprite = this.spriteSize / 2;\n        this.snackSize = 24;\n        this.halfSnackSize = this.snackSize / 2;\n        this.canvasCenter = {};\n        this.animationTime;\n    }\n\n    setAnimationTime(time) {\n        this.animationTime = time;\n    }\n\n    getAnimationTime() {\n        return this.animationTime;\n    }\n\n    roundToSpriteSize(size) {\n        return Math.floor(size / this.spriteSize) * this.spriteSize;\n    }\n\n    setDomVars($arena) {\n        this.canvas = $('#arena')[0];\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.canvasCenter = {\n            x: this.roundToSpriteSize($arena.width() / 2),\n            y: this.roundToSpriteSize($arena.height() / 2)\n        };\n        this.limits = {\n            right: this.canvas.width,\n            bottom: this.canvas.height,\n            left: 0,\n            top: 0\n        };\n    }\n\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { ScreenService } from './screen-service'\n\n@inject(EventAggregator, ScreenService)\n\nexport class SnackService {\n    constructor(eventAggregator, screenService) {\n        this.ea = eventAggregator;\n        this.screenService = screenService;\n        this.snacks = [];\n        this.names = [\n            'axe',\n            'beer',\n            'bunny',\n            'diamond',\n            'gold',\n            'ruby',\n            'skull',\n            'snail',\n            'trash',\n            'viagra'\n        ]\n    }\n\n    newSnack(x, y, name, i) {\n        let snack = {\n            position: {\n                x: x,\n                y: y\n            },\n            name: name,\n            nameIndex: i\n        }\n        return snack;\n    }\n\n    samePosition(pos1, pos2) {\n        return pos1.x == pos2.x && pos1.y == pos2.y;\n    }\n\n    hitSnack(head, neck) {\n        for (let i = 0; i < this.snacks.length - 1; i++) {\n            let snack = this.snacks[i];\n            if (this.samePosition(snack.position, head) ||\n                this.samePosition(snack.position, neck)) {\n                this.removeSnack(i);\n                return snack.name;\n            }\n        }\n        return 'nope';\n    }\n\n    addSnack() {\n        let randomIndex = Math.floor(Math.random() * this.names.length);\n        let snack = this.names[randomIndex];\n        let x = this.screenService.roundToSpriteSize(Math.floor(Math.random() * (this.screenService.limits.right - this.screenService.spriteSize)))\n        let y = this.screenService.roundToSpriteSize(Math.floor(Math.random() * (this.screenService.limits.bottom - this.screenService.spriteSize)))\n        this.snacks.push(this.newSnack(x, y, snack, randomIndex));\n    }\n\n    removeSnack(index) {\n        this.snacks.splice(index, 1);\n    }\n\n    initSnacks() {\n        this.snacks = [];\n    }\n\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { ScreenService } from './screen-service'\nimport { SnackService } from '../services/snack-service';\n\n@inject(EventAggregator, ScreenService, SnackService)\n\nexport class SnakeService {\n    constructor(eventAggregator, screenService, snackService) {\n        this.ea = eventAggregator;\n        this.screenService = screenService;\n        this.snackService = snackService;\n        this.snakeParts = [\n            'head',\n            'body',\n            'tail'\n        ];\n        this.snake = {\n            direction: 0,\n            directions: [\n                [[1, 0], [0, 1, 0, -1]],\n                [[0, 1], [-1, 0, 1, 0]],\n                [[-1, 0], [0, -1, 0, 1]],\n                [[0, -1], [1, 0, -1, 0]],\n                [[0, 0], [0, 0, 0, 0]]\n            ],\n            segments: [],\n            deadSegments: []\n        }\n        this.snackMethods = {\n            nope: () => {\n                void (0);\n            },\n            axe: () => {\n                this.cutSnake();\n                this.ea.publish('snack', 'Axe: lost half of yourself');\n            },\n            beer: () => {\n                this.ea.publish('snack', 'Beer: grow slower for 15 seconds');\n            },\n            bunny: () => {\n                this.ea.publish('snack', 'Bunny: run faster for 15 seconds');\n            },\n            diamond: () => {\n                this.ea.publish('snack', 'Diamond: 10000 points');\n            },\n            gold: () => {\n                this.ea.publish('snack', 'Gold: 1000 points');\n            },\n            ruby: () => {\n                this.ea.publish('snack', 'Ruby: score &times; 10 for 15 seconds');\n            },\n            skull: () => {\n                this.ea.publish('snack', 'Skull: you die');\n            },\n            snail: () => {\n                this.ea.publish('snack', 'Snail: run slower for 15 seconds');\n            },\n            trash: () => {\n                this.ea.publish('snack', 'Trash: trash all extra&rsquo;s');\n            },\n            viagra: () => {\n                this.ea.publish('snack', 'Viagra: grow harder for 15 seconds');\n            }\n        }\n        this.setSubscribers();\n    }\n\n    mod(m, n) {\n        return ((m % n) + n) % n;\n    }\n\n    step(grow) {\n        // limit the rate at which turns are accepted\n        (this.snake.turnSteps > 0) && this.snake.turnSteps--;\n        let tail = this.snake.segments[this.snake.segments.length - 1];\n        let newTail = {};\n        newTail.x = tail.x;\n        newTail.y = tail.y;\n        for (let i = this.snake.segments.length - 1; i > 0; i -= 1) {\n            this.snake.segments[i].x = this.snake.segments[i - 1].x;\n            this.snake.segments[i].y = this.snake.segments[i - 1].y;\n        }\n        this.snake.segments[0].x += this.snake.directions[this.mod(this.snake.direction, 4)][0][0] * this.snake.segmentSize;\n        this.snake.segments[0].y += this.snake.directions[this.mod(this.snake.direction, 4)][0][1] * this.snake.segmentSize;\n        this.hitWall();\n        this.hitSnake();\n        let head = this.snake.segments[0];\n        let neck = head;\n        (this.snake.segments.length > 1) && (neck = this.snake.segments[1]);\n        let method = this.snackService.hitSnack(head, neck).toLowerCase();\n        this.snackMethods[method]();\n        (grow) && (this.snake.segments.push(newTail));\n    }\n\n    cutSnake() {\n        let halfSnake = Math.floor(this.snake.segments.length / 2)\n        this.snake.segments.splice(-halfSnake);\n    }\n\n    fallDown() {\n        this.crawling = false;\n        for (let i = 0; i < this.snake.segments.length; i++) {\n            if (this.snake.deadSegments.indexOf(i) < 0) {\n                let segment = this.snake.segments[i];\n                let newY = (segment.y + 1) * 1.05;\n                if (newY <= this.screenService.limits.bottom) {\n                    segment.y = newY;\n                } else {\n                    this.snake.deadSegments.push(i);\n                }\n            }\n        }\n        if (this.snake.deadSegments.length >= this.snake.segments.length) {\n            this.ea.publish('gameOver');\n        }\n    }\n\n    hitWall() {\n        let head = this.snake.segments[0];\n        let wallHit =\n            head.x > this.screenService.limits.right - this.snake.segmentSize ||\n            head.x < this.screenService.limits.left ||\n            head.y > this.screenService.limits.bottom - this.snake.segmentSize ||\n            head.y < this.screenService.limits.top;\n        if (wallHit) {\n            this.ea.publish('die', 'You hit a wall');\n            return true;\n        }\n        return false;\n    }\n\n    hitSnake() {\n        let head = this.snake.segments[0];\n        for (let i = 3; i < this.snake.segments.length - 1; i++) {\n            let segment = this.snake.segments[i];\n            if (this.samePosition(segment, head)) {\n                this.ea.publish('die', 'You tried to bite yourself that&rsquo;s deadly');\n                return true;\n            }\n        }\n        return false;\n    }\n\n    samePosition(pos1, pos2) {\n        return pos1.x == pos2.x && pos1.y == pos2.y;\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        let newDirection = 0;\n        let directions = {\n            'ArrowRight': 0,\n            'ArrowDown': 1,\n            'ArrowLeft': 2,\n            'ArrowUp': 3\n        }\n        this.ea.subscribe('keyPressed', response => {\n            if (response.startsWith('Arrow') && this.snake.turnSteps == 0) {\n                this.snake.turnSteps = 1;\n                let directionChange = this.snake.directions[this.mod(this.snake.direction, 4)][1][directions[response]];\n                this.snake.direction += directionChange;\n            }\n        });\n    }\n\n    setCenter() {\n        this.center = this.screenService.canvasCenter;\n    }\n\n    minTurnSteps() {\n        return Math.ceil(this.snake.segmentSize / this.snake.stepSize) + 1;\n    }\n\n    initSnake() {\n        this.snake.segmentSize = this.screenService.spriteSize;\n        this.halfSprite = Math.round(this.snake.segmentSize / 2);\n        this.accelleration = 1.01;\n        this.score = 0;\n        this.snake.deadSegments = [];\n        this.snake.stepSize = 16;\n        this.snake.segments = [];\n        this.snake.turnSteps = 0;\n        let segment = { x: this.center.x, y: this.center.y };\n        this.snake.segments.push(segment);\n    }\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { SnakeService } from './snake-service';\nimport { SnackService } from './snack-service';\nimport { ScreenService } from './screen-service';\nimport { ScoreService } from './score-service';\n\n@inject(EventAggregator, SnakeService, SnackService, ScreenService, ScoreService)\n\nexport class TimingService {\n    constructor(eventAggregator, snakeService, snackService, screenService, scoreService) {\n        this.ea = eventAggregator;\n        this.snakeService = snakeService;\n        this.snackService = snackService;\n        this.screenService = screenService;\n        this.scoreService = scoreService;\n\n        this.crawling = false;\n        this.steps = 0;\n        this.speed = 1;\n        this.fallTimerHandle = null;\n        this.stepTimerHandle = null;\n        this.pause = false;\n\n        this.baseGrowInterval = 10;\n        this.baseScoreInterval = 10;\n        this.baseSnackInterval = 10;\n        this.baseSpeedupInterval = 100;\n\n        this.maxStepInterval = 240;\n        this.minStepInterval = 20;\n        this.changeStepInterval = 20;\n\n        this.dropInterval = 10;\n        this.snackDuration = 15000;\n\n        this.methods = {\n            axe: () => {\n                void (0)\n            },\n            beer: () => {\n                this.growSlower();\n            },\n            bunny: () => {\n                this.speedUp();\n            },\n            diamond: () => {\n                this.scoreService.update(10000);\n            },\n            gold: () => {\n                this.scoreService.update(1000);\n            },\n            ruby: () => {\n                this.multiPlyScore()\n            },\n            skull: () => {\n                this.dropSnake();\n            },\n            snail: () => {\n                this.slowDown();\n            },\n            trash: () => {\n                this.snackService.initSnacks();\n            },\n            viagra: () => {\n                this.growHarder();\n            }\n        }\n\n        this.setSubscribers();\n    }\n\n    startGame() {\n        this.resetIntervals();\n        this.scoreService.initScore();\n        this.snakeService.initSnake();\n        this.snackService.initSnacks();\n        this.crawling = true;\n        this.resumeGame();\n    }\n\n    resumeGame() {\n        this.stepTimerHandle = setInterval(() => {\n            this.drawScreen()\n        }, this.stepInterval);\n    }\n\n    drawScreen() {\n        this.steps += 1;\n        let grow = (this.steps % this.growInterval == 0);\n        grow && this.ea.publish('grow', this.snakeService.snake.segments.length);\n        (this.steps % this.speedupInterval == 0) && this.speedUp();\n        (this.steps % this.snackInterval == 0) && this.snackService.addSnack();\n        this.snakeService.step(grow);\n        this.scoreService.update(this.snakeService.snake.segments.length);\n    }\n\n    dropSnake() {\n        this.fallTimerHandle = setInterval(() => {\n            this.snakeService.fallDown();\n        }, this.dropInterval);\n    }\n\n    speedUp() {\n        if (this.stepInterval > this.minStepInterval) {\n            this.speed += 1;\n            this.clearTimedEvents();\n            this.stepInterval -= this.changeStepInterval;\n            this.screenService.setAnimationTime(this.stepInterval * .001);\n            this.resumeGame();\n            this.ea.publish('speed', this.speed);\n        }\n    }\n\n    slowDown() {\n        if (this.stepInterval < this.maxStepInterval) {\n            this.speed -= 1;\n            this.clearTimedEvents();\n            this.stepInterval += this.changeStepInterval;\n            this.screenService.setAnimationTime(this.stepInterval * .001);\n            this.resumeGame();\n            this.ea.publish('speed', this.speed);\n        }\n    }\n\n    growSlower() {\n        this.growInterval += 5;\n        setTimeout(() => {\n            this.growInterval -= 5;\n        }, this.snackDuration);\n    }\n\n    growHarder() {\n        if (this.growInterval > this.baseGrowInterval) {\n            this.growInterval -= 5;\n            setTimeout(() => {\n                this.growInterval += 5;\n            }, this.snackDuration);\n        }\n    }\n\n    multiPlyScore() {\n        this.scoreService.setMultiplier();\n        setTimeout(() => {\n            this.scoreService.resetMultiplier();\n        }, this.snackDuration);\n    }\n\n    clearTimedEvents() {\n        clearInterval(this.stepTimerHandle);\n        clearInterval(this.fallTimerHandle);\n    }\n\n    pauseGame() {\n        if (this.crawling) {\n            this.pause = !this.pause;\n            if (this.pause) {\n                this.clearTimedEvents();\n            } else {\n                this.resumeGame();\n            }\n        }\n    }\n\n    restart() {\n        if (!this.pause) {\n            this.clearTimedEvents();\n            this.startGame();\n        }\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            switch (response) {\n                case 'Enter': this.ea.publish('start');\n                    break;\n                case ' ': this.ea.publish('pause');\n                    break;\n            }\n        });\n        this.ea.subscribe('die', response => {\n            this.clearTimedEvents();\n            this.dropSnake();\n        });\n        this.ea.subscribe('start', response => {\n            this.restart();\n        });\n        this.ea.subscribe('pause', response => {\n            this.pauseGame();\n        });\n        this.ea.subscribe('gameOver', response => {\n            this.clearTimedEvents();\n        });\n        this.ea.subscribe('snack', response => {\n            let method = response.split(':')[0].toLowerCase();\n            this.methods[method]();\n        });\n    }\n\n    resetIntervals() {\n        this.stepInterval = this.maxStepInterval;\n        this.screenService.setAnimationTime(this.stepInterval * .001);\n        this.scoreInterval = this.baseSoreInterval;\n        this.growInterval = this.baseGrowInterval;\n        this.speedupInterval = this.baseSpeedupInterval;\n        this.snackInterval = this.baseSnackInterval;\n        this.speed = 1;\n    }\n\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class TouchService {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.$area;\n        this.clickAreaSize = {\n            width: 1,\n            height: 1,\n            diagonal: 1\n        }\n        this.ea.subscribe('touch', (response) => {\n            this.handleTouch(response);\n        });\n    }\n\n    setAreaSize($area) {\n        this.$area = $area;\n        this.clickAreaSize.width = $area.width();\n        this.clickAreaSize.height = $area.height();\n        (this.clickAreaSize.height > 0) && (this.clickAreaSize.diagonal = this.clickAreaSize.width / this.clickAreaSize.height);\n    }\n\n    handleTouch(event) {\n        console.log(event);\n        let clickX;\n        let clickY;\n        if (event.layerX) {\n            clickX = event.layerX;\n            clickY = event.layerY;\n        } else {\n            let offset = this.$area.offset();\n            let touch = event.touches[0];\n            clickX = touch.pageX - offset.left;\n            clickY = touch.pageY - offset.top;\n        }\n        let direction = 'undefined';\n        if (clickY <= clickX * this.clickAreaSize.diagonal) {\n            if (clickY <= (this.clickAreaSize.height - clickX)) {\n                direction = 'ArrowUp';\n            } else {\n                direction = 'ArrowRight';\n            }\n        } else {\n            if (clickY <= (this.clickAreaSize.height - clickX)) {\n                direction = 'ArrowLeft';\n            } else {\n                direction = 'ArrowDown';\n            }\n        }\n        this.ea.publish('keyPressed', direction);\n    }\n\n}"],"sourceRoot":"../src"}