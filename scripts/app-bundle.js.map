{"version":3,"sources":["app.js","environment.js","main.js","components/game-screen.js","components/restart-overlay.js","components/status.js","services/keystroke-service.js","services/screen-service.js","services/snack-service.js","services/snake-service.js","services/timing-service.js","resources/index.js"],"names":["App","keystrokeService","timingService","eventAggregator","ea","message","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","GameScreenCustomElement","screenService","snakeService","snackService","snakeImages","snackImages","spriteSize","snakeParts","snackNames","names","snacks","roundToSpriteSize","size","Math","floor","attached","self","$arena","$","$body","$snakeImages","$snackImages","targetWidth","width","targetHeight","height","each","push","setDomVars","setCenter","RestartOverlayCustomElement","showOverlay","firstGame","pause","publish","addEventListeners","subscribe","StatusCustomElement","resetVars","speed","response","length","score","snack","setTimeout","KeystrokeService","acceptMoves","myKeypressCallback","keypressInput","bind","setSubscribers","keysOff","keysOn","document","addEventListener","e","keycode","event","key","ScreenService","halfSprite","snackSize","halfSnackSize","canvasCenter","drawSnake","snake","type","i","segments","segment","ctx","save","translate","rotate","direction","PI","drawImage","restore","drawSnacks","position","nameIndex","fadeArena","fillStyle","fillRect","canvas","getContext","clientWidth","clientHeight","x","y","limits","right","bottom","left","top","SnackService","newSnack","name","samePosition","pos1","pos2","hitSnack","head","removeSnack","addSnack","randomIndex","random","index","splice","initStuff","SnakeService","directions","deadSegments","snackMethods","cutSnake","growSlower","speedUp","step","grow","turnSteps","advanceHead","pop","slice","segmentSize","unshift","hitWall","hitSnake","wallHit","dropSnake","indexOf","newY","halfSnake","growHarder","score100","scoreUpdate","score10","scoreX10","scoreInterval","trashSnacks","onBoard","slowdown","console","log","stepInterval","restartIntervals","die","crawling","clearTimedEvents","fall","amount","startsWith","center","minTurnSteps","ceil","stepSize","initSnake","round","accelleration","TimingService","steps","fallTimerHandle","stepTimerHandle","baseGrowInterval","baseScoreInterval","baseSnackInterval","baseSpeedupInterval","baseStepInterval","dropInterval","startGame","resetIntervals","resumeGame","setInterval","drawScreen","growInterval","speedupInterval","snackInterval","clearInterval","pauseGame","restart","method","split","call","baseSoreInterval"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './services/keystroke-service';\nimport { TimingService } from './services/timing-service';\n\n@inject(KeystrokeService, TimingService, EventAggregator)\n\nexport class App {\n\n    constructor(keystrokeService, timingService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.timingService = timingService;\n        this.ea = eventAggregator;\n        this.message = 'Snake by ashWare';\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport { ScreenService } from '../services/screen-service';\nimport { SnakeService } from '../services/snake-service';\nimport { SnackService } from '../services/snack-service';\n\n@inject(EventAggregator, ScreenService, SnakeService, SnackService)\n\nexport class GameScreenCustomElement {\n\n    constructor(eventAggregator, screenService, snakeService, snackService) {\n        this.ea = eventAggregator;\n        this.screenService = screenService;\n        this.snakeService = snakeService;\n        this.snackService = snackService;\n        this.snakeImages = [];\n        this.snackImages = [];\n        this.spriteSize = 16;\n        // images with these names.jpg should exist in /images/..\n        this.snakeParts = this.snakeService.snakeParts;\n        this.snackNames = this.snackService.names;\n        this.snacks = this.snackService.snacks;\n    }\n\n    roundToSpriteSize(size) {\n        return Math.floor(size / this.spriteSize) * this.spriteSize;\n    }\n\n    attached() {\n        let self = this;\n        this.$arena = $('.arena');\n        let $body = $('body');\n        let $snakeImages = $('.snakeImages img');\n        let $snackImages = $('.snackImages img');\n        let targetWidth = this.roundToSpriteSize($body.width() - 48);\n        let targetHeight = this.roundToSpriteSize($body.height() - 48);\n        this.$arena.width(targetWidth);\n        this.$arena.height(targetHeight)\n        $snakeImages.each(function () {\n            self.snakeImages.push(this);\n        });\n        $snackImages.each(function () {\n            self.snackImages.push(this);\n        });\n        $(() => {\n            this.screenService.setDomVars(this.$arena, this.snakeImages, this.snackImages);\n            this.snakeService.setCenter();\n        });\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class RestartOverlayCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.showOverlay = true;\n        this.firstGame = true;\n        this.pause = false;\n    }\n\n    start() {\n        this.ea.publish('start');\n        this.showOverlay = false;\n        this.firstGame = false;\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('gameOver', response => {\n            this.showOverlay = true;\n        });\n        this.ea.subscribe('start', response => {\n            this.showOverlay = false;\n        });\n        this.ea.subscribe('pause', response => {\n            this.pause = !this.pause;\n        });\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class StatusCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.resetVars();\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('speed', response => {\n            this.speed = response;\n        });\n        this.ea.subscribe('grow', response => {\n            this.length = response;\n        });\n        this.ea.subscribe('start', response => {\n            this.resetVars();\n        });\n        this.ea.subscribe('score', response => {\n            this.score = response;\n        });\n        this.ea.subscribe('snack', response => {\n            this.snack = response;\n            setTimeout(() => {\n                this.snack = '';\n            }, 15000);\n        });\n        this.ea.subscribe('die', response => {\n            this.snack = response;\n        });\n\n    }\n\n    resetVars() {\n        this.speed = 0;\n        this.length = 1;\n        this.score = 0;\n        this.snack = '';\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        (this.acceptMoves) && this.ea.publish('keyPressed', keycode);\n    }\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class ScreenService {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.spriteSize = 16;\n        this.halfSprite = this.spriteSize / 2;\n        this.snackSize = 24;\n        this.halfSnackSize = this.snackSize / 2;\n        this.canvasCenter = {};\n    }\n\n    drawSnake(snake) {\n        let type = 0;\n        for (let i = 0; i < snake.segments.length; i++) {\n            let segment = snake.segments[i];\n            this.ctx.save();\n            this.ctx.translate(segment[0], segment[1]);\n            (segment.type !== 1) && this.ctx.rotate(snake.direction * Math.PI / 2);\n            this.ctx.drawImage(this.snakeImages[type], -this.halfSprite, -this.halfSprite);\n            this.ctx.restore();\n            type = 1;\n        }\n    }\n\n    drawSnacks(snacks) {\n        for (let i = 0; i < snacks.length; i++) {\n            let snack = snacks[i];\n            this.ctx.save();\n            // this.ctx.strokeStyle = 'goldenrod';\n            // this.ctx.rect(snack.position[0], snack.position[1], this.snackSize, this.snackSize);\n            // this.ctx.stroke();\n            this.ctx.translate(snack.position[0] - this.halfSnackSize, snack.position[1] - this.halfSnackSize);\n            // snacks are larger\n            this.ctx.drawImage(this.snackImages[snack.nameIndex], 0, 0, this.snackSize, this.snackSize);\n            this.ctx.restore();\n        }\n    }\n\n    fadeArena() {\n        this.ctx.fillStyle = 'rgba(0,0,0,0.95)';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    roundToSpriteSize(size) {\n        return Math.floor(size / this.spriteSize) * this.spriteSize + this.halfSprite;\n    }\n\n    setDomVars($arena, snakeImages, snackImages) {\n        this.canvas = $('#arena')[0];\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.canvasCenter = {\n            x: this.roundToSpriteSize($arena.width() / 2),\n            y: this.roundToSpriteSize($arena.height() / 2)\n        };\n        this.limits = {\n            right: this.canvas.width,\n            bottom: this.canvas.height,\n            left: 0,\n            top: 0\n        };\n        this.snakeImages = snakeImages;\n        this.snackImages = snackImages;\n    }\n\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { ScreenService } from './screen-service'\n\n@inject(EventAggregator, ScreenService)\n\nexport class SnackService {\n    constructor(eventAggregator, screenService) {\n        this.ea = eventAggregator;\n        this.screenService = screenService;\n        this.snacks = [];\n        this.names = [\n            'axe',\n            'beer',\n            'bunny',\n            'diamond',\n            'gold',\n            'ruby',\n            'skull',\n            'snail',\n            'trash',\n            'viagra'\n        ]\n    }\n\n    newSnack(x, y, name, i) {\n        let snack = {\n            position: [x, y],\n            name: name,\n            nameIndex: i\n        }\n        return snack;\n    }\n\n    samePosition(pos1, pos2) {\n        return pos1[0] == pos2[0] && pos1[1] == pos2[1];\n    }\n\n    hitSnack(head) {\n        for (let i = 0; i < this.snacks.length - 1; i++) {\n            let snack = this.snacks[i];\n            if (this.samePosition(snack.position, head)) {\n                this.removeSnack(i);\n                return snack.name;\n            }\n        }\n        return 'nope';\n    }\n\n    addSnack() {\n        let randomIndex = Math.floor(Math.random() * this.names.length);\n        let snack = this.names[randomIndex];\n        let x = this.screenService.roundToSpriteSize(Math.floor(Math.random() * (this.screenService.limits.right - this.screenService.spriteSize)))\n        let y = this.screenService.roundToSpriteSize(Math.floor(Math.random() * (this.screenService.limits.bottom - this.screenService.spriteSize)))\n        this.snacks.push(this.newSnack(x, y, snack, randomIndex));\n    }\n\n    removeSnack(index) {\n        this.snacks.splice(index, 1);\n    }\n\n    initStuff() {\n        this.snacks = [];\n    }\n\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { ScreenService } from './screen-service'\nimport { SnackService } from '../services/snack-service';\n\n@inject(EventAggregator, ScreenService, SnackService)\n\nexport class SnakeService {\n    constructor(eventAggregator, screenService, snackService) {\n        this.ea = eventAggregator;\n        this.screenService = screenService;\n        this.snackService = snackService;\n        this.snakeParts = [\n            'head',\n            'body',\n            'tail'\n        ];\n        this.snake = {\n            direction: 0,\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1],\n                [0, 0]\n            ],\n            segments: [],\n            deadSegments: []\n        }\n        this.snackMethods = {\n            'nope': void (0),\n            'axe': this.cutSnake(),\n            'beer': this.growSlower(),\n            'bunny': this.speedUp(),\n            // 'diamond': this.score100(),\n            // 'gold': this.score10(),\n            // 'ruby': this.scoreX10(),\n            // 'skull': this.die(),\n            // 'snail': this.slowdown(),\n            // 'trash': this.trashSnacks(),\n            // 'viagra': this.growHarder()\n        }\n        this.setSubscribers();\n    }\n\n    step(grow) {\n        // limit the rate at which turns are accepted\n        (this.snake.turnSteps > 0) && this.snake.turnSteps--;\n        this.advanceHead();\n        (!grow) && (this.snake.segments.pop());\n        // call the function named with value of snack\n        // (snack !== '') && this[snack]();\n        // (this.hitSnake() || this.hitWall()) && this.die();\n    }\n\n    advanceHead() {\n        let head = this.snake.segments[0].slice();\n        head[0] += this.snake.directions[this.snake.direction][0] * this.snake.segmentSize;\n        head[1] += this.snake.directions[this.snake.direction][1] * this.snake.segmentSize;\n        this.snake.segments.unshift(head);\n        this.hitWall();\n        this.hitSnake();\n        this.snackMethods[this.snackService.hitSnack(head)];\n    }\n\n    hitWall() {\n        let head = this.snake.segments[0];\n        let wallHit =\n            head[0] >= this.screenService.limits.right - this.halfSprite ||\n            head[0] <= this.screenService.limits.left + this.halfSprite ||\n            head[1] >= this.screenService.limits.bottom - this.halfSprite ||\n            head[1] <= this.screenService.limits.top + this.halfSprite;\n        wallHit && (this.ea.publish('die', 'You hit a wall'));\n    }\n\n    hitSnake() {\n        let head = this.snake.segments[0];\n        for (let i = 3; i < this.snake.segments.length - 1; i++) {\n            let segment = this.snake.segments[i];\n            if (this.samePosition(segment, head)) {\n                this.ea.publish('die', 'You tried to bite yourself that&rsquo;s deadly');\n                return true;\n            }\n        }\n        return false;\n    }\n\n    samePosition(pos1, pos2) {\n        return pos1[0] == pos2[0] && pos1[1] == pos2[1];\n    }\n\n    dropSnake() {\n        for (let i = 0; i < this.snake.segments.length; i++) {\n            if (this.snake.deadSegments.indexOf(i) < 0) {\n                let segment = this.snake.segments[i];\n                let newY = (segment[1] + 1) * 1.05;\n                if (newY <= this.screenService.limits.bottom) {\n                    segment[1] = newY;\n                } else {\n                    this.snake.deadSegments.push(i);\n                }\n            }\n            if (this.snake.deadSegments.length >= this.snake.segments.length) {\n                this.ea.publish('gameOver');\n            }\n        }\n    }\n\n    cutSnake() {\n        let halfSnake = Math.floor(this.snake.segments.length / 2)\n        this.snake.segments.splice(-halfSnake);\n        this.ea.publish('snack', 'Axe: you lost half of your length');\n    }\n\n    speedUp() {\n        this.ea.publish('snack', 'Bunny: running faster for 15 seconds');\n    }\n\n    growHarder() {\n        this.ea.publish('snack', 'Viagra: growing harder for 15 seconds');\n    }\n\n    growSlower() {\n        this.ea.publish('snack', 'Beer: growing slower for 15 seconds');\n    }\n\n    score100() {\n        this.scoreUpdate(1000);\n        this.ea.publish('snack', 'Diamond: you scored 1000 points');\n    }\n    score10() {\n        this.scoreUpdate(100);\n        this.ea.publish('snack', 'Gold: you scored 100 points');\n    }\n    scoreX10() {\n        if (this.scoreInterval > 250) {\n            this.scoreInterval -= 250;\n            setTimeout(() => {\n                this.scoreInterval += 250;\n            }, 15000);\n            this.ea.publish('snack', 'Ruby: scoring faster for 15 seconds');\n        }\n    }\n    trashSnacks() {\n        this.snacks.onBoard = [];\n        this.ea.publish('snack', 'Trash: you trashed all extra&rsquo;s');\n    }\n\n    slowdown() {\n        console.log('slowdown');\n        if (this.stepInterval < 7) {\n            this.stepInterval += 1;\n            this.restartIntervals();\n            this.ea.publish('speedChange', -1);\n        }\n        this.ea.publish('snack', 'Snail: running slower');\n    }\n\n    die() {\n        this.keysOff();\n        this.crawling = false;\n        this.clearTimedEvents()\n        this.fall();\n    }\n\n    scoreUpdate(amount) {\n        if (amount) {\n            this.score += amount;\n        } else {\n            this.score += this.snake.segments.length;\n        }\n        this.ea.publish('score', this.score);\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            if (response.startsWith('Arrow') && this.snake.turnSteps == 0) {\n                this.snake.turnSteps = 1;\n                switch (response) {\n                    case 'ArrowRight': direction = 0;\n                        break;\n                    case 'ArrowDown': direction = 1;\n                        break;\n                    case 'ArrowLeft': direction = 2;\n                        break;\n                    case 'ArrowUp': direction = 3;\n                        break;\n                }\n                // prevent going in opposite direction\n                (((direction + 2) % 4) !== this.snake.direction) && (this.snake.direction = direction);\n            }\n        });\n    }\n\n    setCenter() {\n        this.center = this.screenService.canvasCenter;\n    }\n\n    minTurnSteps() {\n        return Math.ceil(this.snake.segmentSize / this.snake.stepSize) + 1;\n    }\n\n    initSnake() {\n        this.snake.segmentSize = this.screenService.spriteSize;\n        this.halfSprite = Math.round(this.snake.segmentSize / 2);\n        this.accelleration = 1.01;\n        this.score = 0;\n        this.snake.deadSegments = [];\n        this.snake.stepSize = 16;\n        this.snake.segments = [];\n        this.snake.turnSteps = 0;\n        let segment = [this.center.x, this.center.y];\n        this.snake.segments.push(segment);\n    }\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { SnakeService } from './snake-service';\nimport { SnackService } from './snack-service';\nimport { ScreenService } from './screen-service';\n\n@inject(EventAggregator, SnakeService, SnackService, ScreenService)\n\nexport class TimingService {\n    constructor(eventAggregator, snakeService, snackService, screenService) {\n        this.ea = eventAggregator;\n        this.snakeService = snakeService;\n        this.snackService = snackService;\n        this.screenService = screenService;\n\n        this.crawling = false;\n        this.steps = 0;\n        this.speed = 1;\n        this.fallTimerHandle = null;\n        this.stepTimerHandle = null;\n        this.pause = false;\n\n        this.baseGrowInterval = 10;\n        this.baseScoreInterval = 10;\n        this.baseSnackInterval = 10;\n        this.baseSpeedupInterval = 50;\n        this.baseStepInterval = 400;\n        this.dropInterval = 0;\n\n        this.setSubscribers();\n    }\n\n    startGame() {\n        this.resetIntervals();\n        this.snakeService.initSnake(1);\n        this.crawling = true;\n        this.resumeGame();\n    }\n\n    resumeGame() {\n        this.stepTimerHandle = setInterval(() => {\n            this.drawScreen()\n        }, this.stepInterval);\n    }\n\n    drawScreen() {\n        this.steps += 1;\n        let grow = (this.steps % this.growInterval == 0);\n        grow && this.ea.publish('grow', this.snakeService.snake.segments.length);\n        (this.steps % this.speedupInterval == 0) && this.speedUp();\n        (this.steps % this.snackInterval == 0) && this.snackService.addSnack();\n        this.snakeService.step(grow);\n        this.screenService.fadeArena();\n        this.screenService.drawSnacks(this.snackService.snacks);\n        this.screenService.drawSnake(this.snakeService.snake);\n    }\n\n    speedUp() {\n        if (this.stepInterval > 40) {\n            this.speed += 1;\n            this.clearTimedEvents();\n            this.stepInterval -= 40;\n            this.resumeGame();\n            this.ea.publish('speed', this.speed);\n        }\n    }\n\n    dropSnake() {\n        this.fallTimerHandle = setInterval(() => {\n            this.snakeService.dropSnake();\n            this.screenService.fadeArena();\n            this.screenService.drawSnake(this.snakeService.snake);\n        }, this.dropInterval);\n    }\n\n    growHarder() {\n        if (this.growInterval > baseGrowInterval) {\n            this.growInterval -= 2;\n            setTimeout(() => {\n                this.growInterval += 2;\n            }, 15000);\n        }\n    }\n\n    growSlower() {\n        this.growInterval += 2;\n        setTimeout(() => {\n            this.growInterval -= 2;\n        }, 15000);\n    }\n\n    clearTimedEvents() {\n        clearInterval(this.stepTimerHandle);\n        clearInterval(this.fallTimerHandle);\n        // clearInterval(this.snackTimerHandle);\n        // clearInterval(this.scoreTimerHandle);\n    }\n\n    pauseGame() {\n        if (this.crawling) {\n            this.pause = !this.pause;\n            if (this.pause) {\n                this.clearTimedEvents();\n            } else {\n                this.resumeGame();\n            }\n        }\n    }\n\n    restart() {\n        if (!this.pause) {\n            this.clearTimedEvents();\n            this.startGame();\n        }\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            switch (response) {\n                case 'Enter': this.ea.publish('start');\n                    break;\n                case ' ': this.ea.publish('pause');\n                    break;\n            }\n        });\n        this.ea.subscribe('die', response => {\n            this.clearTimedEvents();\n            this.dropSnake();\n        });\n        this.ea.subscribe('start', response => {\n            this.restart();\n        });\n        this.ea.subscribe('pause', response => {\n            this.pauseGame();\n        });\n        this.ea.subscribe('gameOver', response => {\n            this.clearTimedEvents();\n        });\n        this.ea.subscribe('snack', response => {\n            let method = response.split(':')[0];\n            this[method].call();\n        });\n\n    }\n\n    resetIntervals() {\n        this.stepInterval = this.baseStepInterval;\n        this.scoreInterval = this.baseSoreInterval;\n        this.growInterval = this.baseGrowInterval;\n        this.speedupInterval = this.baseSpeedupInterval;\n        this.snackInterval = this.baseSnackInterval;\n        this.speed = 1;\n    }\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}