{"version":3,"sources":["app.js","environment.js","keystroke-service.js","main.js","resources/index.js"],"names":["App","keystrokeService","eventAggregator","ea","message","spriteSize","stepTimerHandle","snake","direction","directions","images","segments","stepInterval","crawl","setInterval","stepNdraw","fadeArena","i","length","segment","advanceSegment","followSegment","drawSegment","position","j","preceder","dx","dy","absDx","Math","abs","stepX","round","absDy","stepY","imgObj","ctx","save","translate","drawImage","imgIndex","restore","fillStyle","fillRect","canvas","width","height","setSubscribers","subscribe","response","initSnake","canvasCenter","x","parseInt","$arena","y","$img","push","setDomVars","document","getElementById","getContext","clientWidth","clientHeight","attached","debug","testing","KeystrokeService","acceptMoves","keys","myKeypressCallback","keypressInput","bind","keysOff","keysOn","addEventListener","e","console","log","keycode","event","key","publish","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './keystroke-service';\n\n@inject(KeystrokeService, EventAggregator)\n\nexport class App {\n\n    constructor(keystrokeService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.ea = eventAggregator;\n        this.message = 'Snake by ashWare';\n        this.spriteSize = 16;\n        this.stepTimerHandle = null;\n        this.snake = {\n            direction: 0,\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1]\n            ],\n            images: [],\n            segments: [],\n            stepInterval: 500\n        }\n    }\n\n    crawl() {\n        this.stepTimerHandle = setInterval(() => {\n            this.stepNdraw();\n        }, this.snake.stepInterval);\n    }\n\n    stepNdraw() {\n        this.fadeArena();\n        for (let i = 0; i < this.snake.segments.length; i++) {\n            let segment = this.snake.segments[i];\n            (i == 0) ? this.advanceSegment(i) : this.followSegment(i, i - 1);\n            this.drawSegment(segment);\n        }\n    }\n\n    advanceSegment(i) {\n        this.snake.segments[i].position[0] += this.snake.directions[this.snake.direction][0];\n        this.snake.segments[i].position[1] += this.snake.directions[this.snake.direction][1];\n    }\n\n    followSegment(i, j) {\n        let segment = this.snake.segments[i];\n        let preceder = this.snake.segments[j];\n        let dx = preceder.position[0] - segment.position[0];\n        let dy = preceder.position[1] - segment.position[1];\n        if (dx !== 0) {\n            let absDx = Math.abs(dx)\n            let stepX = Math.round(absDx / dx);\n            (absDx > this.spriteSize) ? segment.position[0] += stepX : null;\n        }\n        if (dy !== 0) {\n            let absDy = Math.abs(dy)\n            let stepY = Math.round(absDy / dy);\n            (absDy > this.spriteSize) ? segment.position[1] += stepY : null;\n        }\n    }\n\n    drawSegment(imgObj) {\n        let ctx = this.ctx;\n        ctx.save();\n        ctx.translate(imgObj.position[0], imgObj.position[1]);\n        // ctx.rotate(bug.direction - pi / 2); Fix this for each segment -> pass direction onto next segments\n        ctx.drawImage(this.snake.images[imgObj.imgIndex], this.spriteSize, this.spriteSize);\n        ctx.restore();\n    }\n\n    fadeArena() {\n        let ctx = this.ctx;\n        ctx.fillStyle = 'rgba(0,0,0,.1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    setSubscribers() {\n        this.ea.subscribe('keyPressed', response => {\n            switch (response) {\n                case 'ArrowRight': this.snake.direction = 0;\n                    break;\n                case 'ArrowDown': this.snake.direction = 1;\n                    break;\n                case 'ArrowLeft': this.snake.direction = 2;\n                    break;\n                case 'ArrowUp': this.snake.direction = 3;\n                    break;\n                default: null;\n            }\n        });\n    }\n\n    initSnake() {\n        let canvasCenter = {\n            x: parseInt(this.$arena.width() / 2, 10),\n            y: parseInt(this.$arena.height() / 2, 10)\n        };\n        for (let i = 0; i < this.snake.images.length; i++) {\n            let $img = this.snake.images[i];\n            let segment = {\n                imgIndex: i,\n                position: [canvasCenter.x, canvasCenter.y]\n            }\n            this.snake.segments.push(segment);\n        }\n    }\n\n    setDomVars() {\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.snake.images = [\n            $('.head')[0],\n            $('.body')[0],\n            $('.tail')[0]\n        ]\n    }\n\n    attached() {\n        this.setDomVars();\n        this.initSnake();\n        this.setSubscribers();\n        $(() => {\n            this.crawl();\n        });\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.keys = {\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        this.ea.publish('keyPressed', keycode);\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}