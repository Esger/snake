{"version":3,"sources":["app.js","environment.js","keystroke-service.js","main.js","resources/index.js","components/restart-overlay.js","components/status.js"],"names":["App","keystrokeService","eventAggregator","ea","accelleration","message","pause","crawling","spriteSize","halfSprite","snackSize","halfSnackSize","stepTimerHandle","scoreTimerHandle","fallTimerHandle","growTimerHandle","speedupTimerHandle","snackTimerHandle","stepInterval","scoreInterval","growInterval","speedupInterval","snackInterval","score","snacks","images","onBoard","methods","snake","segments","directions","steps","turnSteps","deadSegments","crawl","setInterval","stepNdraw","grow","speedup","addSnack","scoreUpdate","fall","forEach","segment","direction","speedFactor","fallNdraw","fadeArena","drawSnacks","i","advanceSegment","followSegment","drawSegment","snack","hitSnack","hitSnake","hitWall","die","hitFloor","length","clearTimedEvents","keysOn","gameOver","position","canvas","height","head","wallHit","width","publish","self","overlap","segPos","headPos","dx","Math","abs","dy","xOverlap","yOverlap","snackPos","splice","name","cutSnake","halfSnake","floor","growHarder","restartIntervals","setTimeout","growSlower","score100","score10","scoreX10","trashSnacks","slowdown","console","log","tail","dir","factor","x","y","push","keysOff","amount","accellerate","parseInt","j","preceder","axis","newSnack","index","random","className","ctx","save","strokeStyle","rect","stroke","translate","drawImage","restore","imageIndex","rotate","PI","fillStyle","fillRect","setSubscribers","subscribe","response","startsWith","restart","pauseGame","clearInterval","initStuff","canvasCenter","$arena","setDomVars","document","getElementById","getContext","clientWidth","clientHeight","wallSize","css","limits","right","bottom","left","top","attached","debug","testing","KeystrokeService","acceptMoves","myKeypressCallback","keypressInput","bind","addEventListener","e","keycode","event","key","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","RestartOverlayCustomElement","showOverlay","addEventListeners","StatusCustomElement","speed"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './keystroke-service';\n\n@inject(KeystrokeService, EventAggregator)\n\nexport class App {\n\n    constructor(keystrokeService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.ea = eventAggregator;\n        this.accelleration = 1.01;\n        this.message = 'Snake by ashWare';\n        this.pause = false;\n        this.crawling = false;\n        this.spriteSize = 16;\n        this.halfSprite = this.spriteSize / 2;\n        this.snackSize = 24;\n        this.halfSnackSize = this.snackSize / 2;\n        this.stepTimerHandle = null;\n        this.scoreTimerHandle = null;\n        this.fallTimerHandle = null;\n        this.growTimerHandle = null;\n        this.speedupTimerHandle = null;\n        this.snackTimerHandle = null;\n        this.stepInterval = 10;\n        this.scoreInterval = 1000;\n        this.growInterval = 3000;\n        this.speedupInterval = 10000;\n        this.snackInterval = 2500;\n        this.score = 0;\n        this.snacks = {\n            images: [],\n            onBoard: [],\n            methods: {\n                'axe': 'cutSnake',\n                'beer': 'growSlower',\n                'bunny': 'speedup',\n                'diamond': 'score100',\n                'gold': 'score10',\n                'ruby': 'scoreX10',\n                'skull': 'die',\n                'snail': 'slowdown',\n                'trash': 'trashSnacks',\n                'viagra': 'growHarder'\n            }\n        }\n        this.snake = {\n            images: [],\n            segments: [],\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1],\n                [0, 0]\n            ],\n            steps: 0,\n            turnSteps: 0,\n            deadSegments: 0\n        }\n    }\n\n    crawl() {\n        this.stepTimerHandle = setInterval(() => {\n            this.stepNdraw();\n        }, this.stepInterval);\n        this.growTimerHandle = setInterval(() => {\n            this.grow();\n        }, this.growInterval);\n        this.speedupTimerHandle = setInterval(() => {\n            this.speedup();\n        }, this.speedupInterval);\n        this.snackTimerHandle = setInterval(() => {\n            this.addSnack();\n        }, this.snackInterval);\n        this.scoreTimerHandle = setInterval(() => {\n            this.scoreUpdate();\n        }, this.scoreInterval);\n        this.crawling = true;\n    }\n\n    fall() {\n        this.snake.segments.forEach((segment) => {\n            segment.direction = 1;\n            segment.speedFactor = 1;\n        });\n        this.fallTimerHandle = setInterval(() => {\n            this.fallNdraw();\n        }, 0);\n    }\n\n    stepNdraw() {\n        this.fadeArena();\n        this.drawSnacks();\n        this.snake.steps += 1;\n        // limit the rate at which turns are accepted\n        (this.snake.turnSteps > 0) && this.snake.turnSteps--;\n        this.snake.segments.forEach((segment, i) => {\n            (i == 0) ? this.advanceSegment(i) : this.followSegment(i, i - 1);\n            this.drawSegment(segment, i);\n        });\n        let snack = this.hitSnack();\n        // call the function named with value of snack\n        (snack !== '') && this[snack]();\n        (this.hitSnake() || this.hitWall()) && this.die();\n    }\n\n    fallNdraw() {\n        this.fadeArena();\n        this.snake.segments.forEach((segment, i) => {\n            (segment.direction < 4) && this.advanceSegment(i, true);\n            this.drawSegment(segment, i);\n            if (segment.direction < 4 && this.hitFloor(segment)) {\n                this.snake.deadSegments++;\n                segment.direction = 4;\n            }\n        });\n        if (this.snake.deadSegments >= this.snake.segments.length) {\n            this.clearTimedEvents();\n            this.keysOn();\n            this.gameOver();\n        }\n    }\n\n    hitFloor(segment) {\n        return segment.position[1] + this.halfSprite > this.canvas.height;\n    }\n\n    hitWall() {\n        let head = this.snake.segments[0];\n        let wallHit = head.position[0] > this.canvas.width - this.halfSprite ||\n            head.position[0] < 0 + this.halfSprite ||\n            head.position[1] > this.canvas.height - this.halfSprite ||\n            head.position[1] < 0 + this.halfSprite;\n        if (wallHit) {\n            this.ea.publish('snack', 'You hit a wall');\n            return wallHit;\n        }\n    }\n\n    hitSnake() {\n        let self = this;\n        let head = this.snake.segments[0];\n        function overlap(segPos, headPos) {\n            let dx = Math.abs(segPos[0] - headPos[0]);\n            let dy = Math.abs(segPos[1] - headPos[1]);\n            let xOverlap = dx < self.halfSprite;\n            let yOverlap = dy < self.halfSprite;\n            return xOverlap && yOverlap;\n        }\n        for (let i = 1; i < this.snake.segments.length - 1; i++) {\n            let segment = this.snake.segments[i];\n            if (overlap(segment.position, head.position)) {\n                this.ea.publish('snack', 'You tried to eat yourself that&rsquo;s deadly');\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hitSnack() {\n        let self = this;\n        let head = this.snake.segments[0];\n        function overlap(snackPos, headPos) {\n            let dx = Math.abs(snackPos[0] - headPos[0]);\n            let dy = Math.abs(snackPos[1] - headPos[1]);\n            let xOverlap = dx < (self.snackSize + self.spriteSize) / 2;\n            let yOverlap = dy < (self.snackSize + self.spriteSize) / 2;\n            return xOverlap && yOverlap;\n        }\n        for (let i = 0; i < this.snacks.onBoard.length - 1; i++) {\n            let snack = this.snacks.onBoard[i];\n            if (overlap(snack.position, head.position)) {\n                (i > -1) && this.snacks.onBoard.splice(i, 1);\n                return this.snacks.methods[snack.name];\n            }\n        }\n        return '';\n    }\n\n    cutSnake() {\n        let halfSnake = Math.floor(this.snake.segments.length / 2)\n        this.snake.segments.splice(-halfSnake);\n        this.ea.publish('snack', 'Axe: you lost half of your length');\n    }\n\n    growHarder() {\n        if (this.growInterval > 500) {\n            this.growInterval -= 500;\n            this.restartIntervals();\n            setTimeout(() => {\n                this.growInterval += 500;\n                this.restartIntervals();\n            }, 15000);\n            this.ea.publish('snack', 'Blue pill: growing harder for 15 seconds');\n        }\n    }\n    growSlower() {\n        this.growInterval += 500;\n        this.restartIntervals();\n        setTimeout(() => {\n            this.growInterval -= 500;\n            this.restartIntervals();\n        }, 15000);\n        this.ea.publish('snack', 'Beer: growing slower for 15 seconds');\n    }\n    score100() {\n        this.scoreUpdate(1000);\n        this.ea.publish('snack', 'Diamond: you scored 1000 points');\n    }\n    score10() {\n        this.scoreUpdate(100);\n        this.ea.publish('snack', 'Gold: you scored 100 points');\n    }\n    scoreX10() {\n        if (this.scoreInterval > 250) {\n            this.scoreInterval -= 250;\n            setTimeout(() => {\n                this.scoreInterval += 250;\n            }, 15000);\n            this.ea.publish('snack', 'Ruby: scoring faster for 15 seconds');\n        }\n    }\n    trashSnacks() {\n        this.snacks.onBoard = [];\n        this.ea.publish('snack', 'Trash: you trashed all extra&rsquo;s');\n    }\n\n    speedup() {\n        if (this.stepInterval > 0) {\n            this.stepInterval -= 1;\n            this.restartIntervals();\n            this.ea.publish('speedChange', 1);\n        } else {\n            this.snake.segments.forEach((segment) => {\n                segment.speedFactor += 1;\n            });\n            this.stepInterval = 7;\n            this.ea.publish('speedChange', 7);\n        }\n        this.ea.publish('snack', 'Rabbit: running faster');\n    }\n\n    slowdown() {\n        console.log('slowdown');\n        if (this.snake.segments[0].speedFactor > 1) {\n            this.snake.segments.forEach((segment) => {\n                segment.speedFactor -= 1;\n            });\n            this.ea.publish('speedChange', -7);\n        } else {\n            if (this.stepInterval < 7) {\n                this.stepInterval += 1;\n                this.restartIntervals();\n                this.ea.publish('speedChange', -1);\n            }\n        }\n        this.ea.publish('snack', 'Snail: running slower');\n    }\n\n    grow() {\n        let tail = this.snake.segments[this.snake.segments.length - 1];\n        let dir = tail.direction;\n        let factor = tail.speedFactor;\n        let x = tail.position[0] - this.snake.directions[dir][0] * this.spriteSize;\n        let y = tail.position[1] - this.snake.directions[dir][1] * this.spriteSize;\n        this.snake.segments.push(this.segment(dir, factor, x, y));\n        this.ea.publish('grow', this.snake.segments.length);\n    }\n\n    die() {\n        this.keysOff();\n        this.crawling = false;\n        this.clearTimedEvents()\n        this.fall();\n    }\n\n    scoreUpdate(amount) {\n        if (amount) {\n            this.score += amount;\n        } else {\n            this.score += this.snake.segments.length;\n        }\n        this.ea.publish('score', this.score);\n    }\n\n    gameOver() {\n        this.ea.publish('gameOver');\n    }\n\n    advanceSegment(i, accellerate) {\n        let segment = this.snake.segments[i];\n        // when falling accellerate = true\n        (accellerate) && (segment.speedFactor *= this.accelleration);\n        segment.position[0] += parseInt(this.snake.directions[segment.direction][0] * segment.speedFactor, 10);\n        segment.position[1] += parseInt(this.snake.directions[segment.direction][1] * segment.speedFactor, 10);\n    }\n\n    followSegment(i, j) {\n        let segment = this.snake.segments[i];\n        let preceder = this.snake.segments[j];\n        let dx = Math.abs(preceder.position[0] - segment.position[0]);\n        let dy = Math.abs(preceder.position[1] - segment.position[1]);\n        let axis = (segment.direction % 2 == 0) ? 'x' : 'y';\n        if (preceder.direction !== segment.direction) {\n            if (axis == 'x') {\n                if (dx < this.spriteSize && dy > this.spriteSize) {\n                    segment.direction = preceder.direction;\n                    segment.position[0] = preceder.position[0];\n                }\n            } else {\n                if (dy < this.spriteSize && dx > this.spriteSize) {\n                    segment.direction = preceder.direction;\n                    segment.position[1] = preceder.position[1];\n                }\n            }\n        }\n        this.advanceSegment(i);\n    }\n\n    newSnack(x, y, name, i) {\n        let snack = {\n            position: [x, y],\n            name: name,\n            index: i\n        }\n        return snack;\n    }\n\n    addSnack() {\n        let snack = Math.floor(Math.random() * this.snacks.images.length);\n        let name = this.snacks.images[snack].className;\n        // compensate for border width (24);\n        let x = Math.floor(Math.random() * this.canvas.width - 24) + 24;\n        let y = Math.floor(Math.random() * this.canvas.height - 24) + 24;\n        this.snacks.onBoard.push(this.newSnack(x, y, name, snack));\n    }\n\n    drawSnacks() {\n        let ctx = this.ctx;\n        this.snacks.onBoard.forEach((snack) => {\n            ctx.save();\n            ctx.strokeStyle = 'goldenrod';\n            ctx.rect(snack.position[0], snack.position[1], this.snackSize, this.snackSize);\n            ctx.stroke();\n            ctx.translate(snack.position[0], snack.position[1]);\n            // snacks are 2x larger\n            ctx.drawImage(this.snacks.images[snack.index], 0, 0, this.snackSize, this.snackSize);\n            ctx.restore();\n        })\n    }\n\n    drawSegment(segment, i) {\n        let ctx = this.ctx;\n        let imageIndex = 1;\n        switch (i) {\n            case 0: imageIndex = 0;\n                break;\n            case this.snake.segments.length - 1: imageIndex = 2;\n                break;\n        }\n        ctx.save();\n        ctx.translate(segment.position[0], segment.position[1]);\n        (imageIndex !== 1) && ctx.rotate(segment.direction * Math.PI / 2);\n        ctx.drawImage(this.snake.images[imageIndex], -this.halfSprite, -this.halfSprite);\n        ctx.restore();\n    }\n\n    fadeArena() {\n        let ctx = this.ctx;\n        ctx.fillStyle = 'rgba(0,0,0,.1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            if (response.startsWith('Arrow') && this.snake.turnSteps == 0) {\n                this.snake.turnSteps = 17;\n                switch (response) {\n                    case 'ArrowRight': direction = 0;\n                        break;\n                    case 'ArrowDown': direction = 1;\n                        break;\n                    case 'ArrowLeft': direction = 2;\n                        break;\n                    case 'ArrowUp': direction = 3;\n                        break;\n                }\n                (((direction + 2) % 4) !== this.snake.segments[0].direction) && (this.snake.segments[0].direction = direction);\n            }\n            switch (response) {\n                case 'Enter': this.ea.publish('restart');\n                    break;\n                case ' ': if (this.crawling) { this.ea.publish('pause'); }\n                    break;\n            }\n        });\n        this.ea.subscribe('restart', response => {\n            this.restart();\n        });\n        this.ea.subscribe('pause', response => {\n            this.pauseGame();\n        });\n    }\n\n    segment(direction, speedFactor, x, y) {\n        return {\n            direction: direction,\n            position: [x, y],\n            speedFactor: speedFactor\n        }\n    }\n\n    clearTimedEvents() {\n        clearInterval(this.stepTimerHandle);\n        clearInterval(this.fallTimerHandle);\n        clearInterval(this.growTimerHandle);\n        clearInterval(this.speedupTimerHandle);\n        clearInterval(this.snackTimerHandle);\n        clearInterval(this.scoreTimerHandle);\n    }\n\n    pauseGame() {\n        this.pause = !this.pause;\n        if (this.pause) {\n            this.clearTimedEvents();\n        } else {\n            this.crawl();\n        }\n    }\n\n    restartIntervals() {\n        this.clearTimedEvents();\n        this.crawl();\n    }\n\n    restart() {\n        if (!this.pause) {\n            this.clearTimedEvents();\n            this.initStuff();\n            this.crawl();\n        }\n    }\n\n    keysOn() {\n        this.ea.publish('keysOn');\n    }\n\n    keysOff() {\n        this.ea.publish('keysOff');\n    }\n\n    initStuff() {\n        let canvasCenter = {\n            x: parseInt(this.$arena.width() / 2, 10),\n            y: parseInt(this.$arena.height() / 2, 10)\n        };\n        this.snake.segments = [];\n        this.snake.deadSegments = 0;\n        this.stepInterval = 10;\n        this.snake.steps = 0;\n        this.snake.turnSteps = 0;\n        this.snake.segments.push(this.segment(0, 1, canvasCenter.x, canvasCenter.y));\n        this.snacks.onBoard = [];\n        this.score = 0;\n    }\n\n    setDomVars() {\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.wallSize = parseInt(this.$arena.css('borderWidth'), 10);\n        this.limits = {\n            right: this.canvas.width - this.wallSize,\n            bottom: this.canvas.height - this.wallSize,\n            left: this.wallSize,\n            top: this.wallSize\n        }\n        this.snake.images = [\n            $('.head')[0],\n            $('.body')[0],\n            $('.tail')[0]\n        ]\n        this.snacks.images = [\n            $('.axe')[0],\n            $('.beer')[0],\n            $('.bunny')[0],\n            $('.diamond')[0],\n            $('.gold')[0],\n            $('.ruby')[0],\n            $('.skull')[0],\n            $('.snail')[0],\n            $('.trash')[0],\n            $('.viagra')[0]\n        ]\n    }\n\n    attached() {\n        this.setDomVars();\n        this.initStuff();\n        this.setSubscribers();\n        $(() => {\n            this.crawl();\n        });\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        (this.acceptMoves) && this.ea.publish('keyPressed', keycode);\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class RestartOverlayCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.showOverlay = false;\n        this.pause = false;\n    }\n\n    restart() {\n        this.ea.publish('restart');\n        this.showOverlay = false;\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('gameOver', response => {\n            this.showOverlay = true;\n        });\n        this.ea.subscribe('restart', response => {\n            this.showOverlay = false;\n        });\n        this.ea.subscribe('pause', response => {\n            this.pause = !this.pause;\n        });\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class StatusCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.speed = 0;\n        this.length = 1;\n        this.score = 0;\n        this.snack = '';\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('speedChange', response => {\n            this.speed += response;\n        });\n        this.ea.subscribe('grow', response => {\n            this.length = response;\n        });\n        this.ea.subscribe('restart', response => {\n            this.length = 1;\n            this.speed = 0;\n        });\n        this.ea.subscribe('score', response => {\n            this.score = response;\n        });\n        this.ea.subscribe('snack', response => {\n            this.snack = response;\n            setTimeout(() => {\n                this.snack = '';\n            }, 15000);\n        });\n\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n"],"sourceRoot":"../src"}