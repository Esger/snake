{"version":3,"sources":["app.js","environment.js","keystroke-service.js","main.js","resources/index.js","components/restart-overlay.js","components/status.js"],"names":["App","keystrokeService","eventAggregator","ea","accelleration","message","pause","crawling","spriteSize","halfSprite","stepTimerHandle","fallTimerHandle","growTimerHandle","speedupTimerHandle","snackTimerHandle","snacks","images","onBoard","snackInterval","snake","segments","directions","steps","turnSteps","deadSegments","stepInterval","growInterval","speedupInterval","crawl","setInterval","stepNdraw","grow","speedup","addSnack","fall","forEach","segment","direction","speedFactor","fallNdraw","fadeArena","drawSnacks","i","advanceSegment","followSegment","drawSegment","hitSnake","hitWall","die","floorHit","length","clearTimedEvents","keysOn","gameOver","position","canvas","height","head","width","self","overlap","segPos","headPos","dx","Math","abs","dy","xOverlap","yOverlap","pauseGame","publish","keysOff","clearInterval","accellerate","parseInt","j","preceder","axis","tail","dir","factor","x","y","push","newSnack","name","snack","index","floor","random","className","ctx","save","translate","drawImage","restore","imageIndex","rotate","PI","fillStyle","fillRect","setSubscribers","subscribe","response","startsWith","restart","initSnake","canvasCenter","$arena","setDomVars","document","getElementById","getContext","clientWidth","clientHeight","wallSize","css","limits","right","bottom","left","top","attached","debug","testing","KeystrokeService","acceptMoves","myKeypressCallback","keypressInput","bind","addEventListener","e","keycode","event","key","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","RestartOverlayCustomElement","showOverlay","addEventListeners","StatusCustomElement","speed"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport $ from 'jquery';\nimport { KeystrokeService } from './keystroke-service';\n\n@inject(KeystrokeService, EventAggregator)\n\nexport class App {\n\n    constructor(keystrokeService, eventAggregator) {\n        this.keystrokeService = keystrokeService;\n        this.ea = eventAggregator;\n        this.accelleration = 1.01;\n        this.message = 'Snake by ashWare';\n        this.pause = false;\n        this.crawling = false;\n        this.spriteSize = 16;\n        this.halfSprite = this.spriteSize / 2;\n        this.stepTimerHandle = null;\n        this.fallTimerHandle = null;\n        this.growTimerHandle = null;\n        this.speedupTimerHandle = null;\n        this.snackTimerHandle = null;\n        this.snacks = {\n            images: [],\n            onBoard: [],\n            snackInterval: 2500\n        }\n        this.snake = {\n            images: [],\n            segments: [],\n            directions: [\n                [1, 0],\n                [0, 1],\n                [-1, 0],\n                [0, -1],\n                [0, 0]\n            ],\n            steps: 0,\n            turnSteps: 0,\n            deadSegments: 0,\n            stepInterval: 10,\n            growInterval: 3000,\n            speedupInterval: 10000\n        }\n    }\n\n    crawl() {\n        this.stepTimerHandle = setInterval(() => {\n            this.stepNdraw();\n        }, this.snake.stepInterval);\n        this.growTimerHandle = setInterval(() => {\n            this.grow();\n        }, this.snake.growInterval);\n        this.speedupTimerHandle = setInterval(() => {\n            this.speedup();\n        }, this.snake.speedupInterval);\n        this.snackTimerHandle = setInterval(() => {\n            this.addSnack();\n        }, this.snacks.snackInterval);\n        this.crawling = true;\n    }\n\n    fall() {\n        this.snake.segments.forEach((segment) => {\n            segment.direction = 1;\n            segment.speedFactor = 1;\n        });\n        this.fallTimerHandle = setInterval(() => {\n            this.fallNdraw();\n        }, 0);\n    }\n\n    stepNdraw() {\n        this.fadeArena();\n        this.drawSnacks();\n        this.snake.steps += 1;\n        // limit the rate at which turns are accepted\n        (this.snake.turnSteps > 0) && this.snake.turnSteps--;\n        this.snake.segments.forEach((segment, i) => {\n            (i == 0) ? this.advanceSegment(i) : this.followSegment(i, i - 1);\n            this.drawSegment(segment, i);\n        });\n        (this.hitSnake() || this.hitWall()) && this.die();\n    }\n\n    fallNdraw() {\n        this.fadeArena();\n        this.snake.segments.forEach((segment, i) => {\n            (segment.direction < 4) && this.advanceSegment(i, true);\n            this.drawSegment(segment, i);\n            if (segment.direction < 4 && this.floorHit(segment)) {\n                this.snake.deadSegments++;\n                segment.direction = 4;\n            }\n        });\n        if (this.snake.deadSegments >= this.snake.segments.length) {\n            this.clearTimedEvents();\n            this.keysOn();\n            this.gameOver();\n        }\n    }\n\n    floorHit(segment) {\n        return segment.position[1] + this.halfSprite > this.canvas.height;\n    }\n\n    hitWall() {\n        let head = this.snake.segments[0];\n        return head.position[0] > this.canvas.width - this.halfSprite ||\n            head.position[0] < 0 + this.halfSprite ||\n            head.position[1] > this.canvas.height - this.halfSprite ||\n            head.position[1] < 0 + this.halfSprite;\n    }\n\n    hitSnake() {\n        let self = this;\n        let head = this.snake.segments[0];\n        function overlap(segPos, headPos) {\n            let dx = Math.abs(segPos[0] - headPos[0]);\n            let dy = Math.abs(segPos[1] - headPos[1]);\n            let xOverlap = dx < self.halfSprite;\n            let yOverlap = dy < self.halfSprite;\n            return xOverlap && yOverlap;\n        }\n        for (let i = 1; i < this.snake.segments.length - 1; i++) {\n            let segment = this.snake.segments[i];\n            if (overlap(segment.position, head.position)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    speedup() {\n        if (this.snake.stepInterval > 0) {\n            this.snake.stepInterval--;\n        } else {\n            this.snake.segments.forEach((segment) => {\n                segment.speedFactor += 1;\n            });\n            this.snake.stepInterval = 7;\n        }\n        this.pauseGame();\n        this.pauseGame();\n        this.ea.publish('speedup');\n    }\n\n    die() {\n        this.keysOff();\n        this.crawling = false;\n        clearInterval(this.stepTimerHandle);\n        this.fall();\n    }\n\n    gameOver() {\n        this.ea.publish('gameOver');\n    }\n\n    advanceSegment(i, accellerate) {\n        let segment = this.snake.segments[i];\n        (accellerate) && (segment.speedFactor *= this.accelleration);\n        segment.position[0] += parseInt(this.snake.directions[segment.direction][0] * segment.speedFactor, 10);\n        segment.position[1] += parseInt(this.snake.directions[segment.direction][1] * segment.speedFactor, 10);\n    }\n\n    followSegment(i, j) {\n        let segment = this.snake.segments[i];\n        let preceder = this.snake.segments[j];\n        let dx = Math.abs(preceder.position[0] - segment.position[0]);\n        let dy = Math.abs(preceder.position[1] - segment.position[1]);\n        let axis = (segment.direction % 2 == 0) ? 'x' : 'y';\n        if (preceder.direction !== segment.direction) {\n            if (axis == 'x') {\n                if (dx < this.spriteSize && dy > this.spriteSize) {\n                    segment.direction = preceder.direction;\n                    segment.position[0] = preceder.position[0];\n                }\n            } else {\n                if (dy < this.spriteSize && dx > this.spriteSize) {\n                    segment.direction = preceder.direction;\n                    segment.position[1] = preceder.position[1];\n                }\n            }\n        }\n        this.advanceSegment(i);\n    }\n\n    grow() {\n        let tail = this.snake.segments[this.snake.segments.length - 1];\n        let dir = tail.direction;\n        let factor = tail.speedFactor;\n        let x = tail.position[0] - this.snake.directions[dir][0] * this.spriteSize;\n        let y = tail.position[1] - this.snake.directions[dir][1] * this.spriteSize;\n        this.snake.segments.push(this.segment(dir, factor, x, y));\n        this.ea.publish('grow');\n    }\n\n    newSnack(x, y, name, i) {\n        let snack = {\n            position: [x, y],\n            name: name,\n            index: i\n        }\n        return snack;\n    }\n\n    addSnack() {\n        let snack = Math.floor(Math.random() * this.snacks.images.length);\n        let name = this.snacks.images[snack].className;\n        let x = Math.floor(Math.random() * this.canvas.width / this.spriteSize) * this.spriteSize;\n        let y = Math.floor(Math.random() * this.canvas.height / this.spriteSize) * this.spriteSize;\n        this.snacks.onBoard.push(this.newSnack(x, y, name, snack));\n    }\n\n    drawSnacks() {\n        let ctx = this.ctx;\n        this.snacks.onBoard.forEach((snack) => {\n            ctx.save();\n            ctx.translate(snack.position[0], snack.position[1]);\n            ctx.drawImage(this.snacks.images[snack.index], -this.halfSprite, -this.halfSprite);\n            ctx.restore();\n        })\n    }\n\n    drawSegment(segment, i) {\n        let ctx = this.ctx;\n        let imageIndex = 1;\n        switch (i) {\n            case 0: imageIndex = 0;\n                break;\n            case this.snake.segments.length - 1: imageIndex = 2;\n                break;\n        }\n        ctx.save();\n        ctx.translate(segment.position[0], segment.position[1]);\n        (imageIndex !== 1) && ctx.rotate(segment.direction * Math.PI / 2);\n        ctx.drawImage(this.snake.images[imageIndex], -this.halfSprite, -this.halfSprite);\n        ctx.restore();\n    }\n\n    fadeArena() {\n        let ctx = this.ctx;\n        ctx.fillStyle = 'rgba(0,0,0,.1)';\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    setSubscribers() {\n        let direction = 0;\n        this.ea.subscribe('keyPressed', response => {\n            if (response.startsWith('Arrow') && this.snake.turnSteps == 0) {\n                this.snake.turnSteps = 17;\n                switch (response) {\n                    case 'ArrowRight': direction = 0;\n                        break;\n                    case 'ArrowDown': direction = 1;\n                        break;\n                    case 'ArrowLeft': direction = 2;\n                        break;\n                    case 'ArrowUp': direction = 3;\n                        break;\n                }\n                (((direction + 2) % 4) !== this.snake.segments[0].direction) && (this.snake.segments[0].direction = direction);\n            }\n            switch (response) {\n                case 'Enter': this.ea.publish('restart');\n                    break;\n                case ' ': if (this.crawling) { this.ea.publish('pause'); }\n                    break;\n            }\n        });\n        this.ea.subscribe('restart', response => {\n            this.restart();\n        });\n        this.ea.subscribe('pause', response => {\n            this.pauseGame();\n        });\n    }\n\n    segment(direction, speedFactor, x, y) {\n        return {\n            direction: direction,\n            position: [x, y],\n            speedFactor: speedFactor\n        }\n    }\n\n    clearTimedEvents() {\n        clearInterval(this.stepTimerHandle);\n        clearInterval(this.fallTimerHandle);\n        clearInterval(this.growTimerHandle);\n        clearInterval(this.speedupTimerHandle);\n        clearInterval(this.snackTimerHandle);\n    }\n\n    pauseGame() {\n        this.pause = !this.pause;\n        if (this.pause) {\n            this.clearTimedEvents();\n        } else {\n            this.crawl();\n        }\n    }\n\n    restart() {\n        if (!this.pause) {\n            this.clearTimedEvents();\n            this.initSnake();\n            this.crawl();\n        }\n    }\n\n    keysOn() {\n        this.ea.publish('keysOn');\n    }\n\n    keysOff() {\n        this.ea.publish('keysOff');\n    }\n\n    initSnake() {\n        let canvasCenter = {\n            x: parseInt(this.$arena.width() / 2, 10),\n            y: parseInt(this.$arena.height() / 2, 10)\n        };\n        this.snake.segments = [];\n        this.snake.deadSegments = 0;\n        this.snake.stepInterval = 10;\n        this.snake.steps = 0;\n        this.snake.turnSteps = 0;\n        this.snake.segments.push(this.segment(0, 1, canvasCenter.x, canvasCenter.y));\n        this.snacks.onBoard = [];\n    }\n\n    setDomVars() {\n        this.$arena = $('.arena');\n        this.canvas = document.getElementById('arena');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n        this.wallSize = parseInt(this.$arena.css('borderWidth'), 10);\n        this.limits = {\n            right: this.canvas.width - this.wallSize,\n            bottom: this.canvas.height - this.wallSize,\n            left: this.wallSize,\n            top: this.wallSize\n        }\n        this.snake.images = [\n            $('.head')[0],\n            $('.body')[0],\n            $('.tail')[0]\n        ]\n        this.snacks.images = [\n            $('.axe')[0],\n            $('.beer')[0],\n            $('.bunny')[0],\n            $('.diamond')[0],\n            $('.gold')[0],\n            $('.ruby')[0],\n            $('.skull')[0],\n            $('.snail')[0],\n            $('.trash')[0],\n            $('.viagra')[0]\n        ]\n    }\n\n    attached() {\n        this.setDomVars();\n        this.initSnake();\n        this.setSubscribers();\n        $(() => {\n            this.crawl();\n        });\n    }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class KeystrokeService {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.acceptMoves = true;\n        this.myKeypressCallback = this.keypressInput.bind(this);\n        this.setSubscribers();\n    }\n\n    keysOff() {\n        this.acceptMoves = false;\n    }\n\n    keysOn() {\n        this.acceptMoves = true;\n    }\n\n    setSubscribers() {\n        document.addEventListener('keydown', this.myKeypressCallback, false);\n        this.ea.subscribe('keysOff', response => {\n            this.keysOff();\n        });\n        this.ea.subscribe('keysOn', response => {\n            this.keysOn();\n        });\n    }\n\n    // This function is called by the aliased method\n    keypressInput(e) {\n        // console.log(e);\n        let keycode = event.key; // also for cross-browser compatible\n        (this.acceptMoves) && this.ea.publish('keyPressed', keycode);\n    }\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class RestartOverlayCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.showOverlay = false;\n        this.pause = false;\n    }\n\n    restart() {\n        this.ea.publish('restart');\n        this.showOverlay = false;\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('gameOver', response => {\n            this.showOverlay = true;\n        });\n        this.ea.subscribe('restart', response => {\n            this.showOverlay = false;\n        });\n        this.ea.subscribe('pause', response => {\n            this.pause = !this.pause;\n        });\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class StatusCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.speed = 0;\n        this.length = 1;\n    }\n\n    addEventListeners() {\n        this.ea.subscribe('speedup', response => {\n            this.speed++;\n        });\n        this.ea.subscribe('grow', response => {\n            this.length++;\n        });\n        this.ea.subscribe('restart', response => {\n            this.length = 1;\n            this.speed = 0;\n        });\n\n    }\n\n    attached() {\n        this.addEventListeners();\n    }\n\n}\n"],"sourceRoot":"../src"}